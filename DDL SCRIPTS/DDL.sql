----BELOW BLOCK WILL DROP THE TABLES AND SEQUENCE THAT WERE ALREADY CREATED, MAKING THE DDL REUSABLE
DECLARE
OBJ_NAME VARCHAR(1000);
BEGIN
FOR I IN (SELECT OBJECT_NAME, OBJECT_TYPE FROM USER_OBJECTS WHERE OBJECT_TYPE IN ('TABLE', 'SEQUENCE') )
LOOP
IF I.OBJECT_TYPE = 'TABLE' THEN

OBJ_NAME := ('DROP ' || I.OBJECT_TYPE ||' ' || I.OBJECT_NAME || ' CASCADE CONSTRAINTS');
DBMS_OUTPUT.PUT_LINE(OBJ_NAME);
EXECUTE IMMEDIATE OBJ_NAME;

ELSIF I.OBJECT_TYPE = 'SEQUENCE' THEN
OBJ_NAME := 'DROP ' || I.OBJECT_TYPE ||' '|| I.OBJECT_NAME;
DBMS_OUTPUT.PUT_LINE(OBJ_NAME);
EXECUTE IMMEDIATE OBJ_NAME;
ELSE
DBMS_OUTPUT.PUT_LINE('STARTING FRESH');

END IF;

END LOOP;
DBMS_OUTPUT.PUT_LINE('STARTING FRESH');
END;
/

-------------- TABLE CREATION ----------------------------------------

CREATE TABLE CUSTOMER (
CUSTOMER_ID NUMBER(25),
FIRST_NAME VARCHAR2(50 BYTE) NOT NULL,
LAST_NAME VARCHAR2(50 BYTE),
GENDER VARCHAR2(6 BYTE),
EMAIL_ID VARCHAR2(50 BYTE) NOT NULL,
CONTACT NUMBER(10) NOT NULL,
SSN_NUMBER NUMBER(9) NOT NULL,
CUSTOMER_TYPE VARCHAR2(10 BYTE) NOT NULL,
DATE_OF_BIRTH DATE NOT NULL,
CONSTRAINT CUSTOMER_ID_PK PRIMARY KEY (CUSTOMER_ID),
CONSTRAINT EMAIL_ID_UN UNIQUE (EMAIL_ID),
CONSTRAINT CONTACT_UN UNIQUE (CONTACT),
CONSTRAINT SSN_NUMBER_UN UNIQUE (SSN_NUMBER),
CONSTRAINT CUSTOMER_TYPE_CHECK CHECK (CUSTOMER_TYPE IN ('CASUAL','REGISTERED') ),
CONSTRAINT GENDER_TYPE_CHECK CHECK (GENDER IN ('M','F','OTHERS') ),
CONSTRAINT CONTACT_LEN_CHECK CHECK (LENGTH(CONTACT) = 10 AND (CONTACT > 0) ),
CONSTRAINT SSN_LEN_CHECK CHECK (LENGTH(SSN_NUMBER) = 9 AND (SSN_NUMBER > 0) ));



CREATE TABLE CUSTOMER_ADDRESS (
ADDRESS_ID NUMBER(25) PRIMARY KEY NOT NULL,
LINE_1 VARCHAR(50) NOT NULL,
LINE_2 VARCHAR(50),
CITY VARCHAR(50) NOT NULL,
STATE VARCHAR(50) NOT NULL,
ZIPCODE NUMBER(5) NOT NULL,
TYPE VARCHAR (15) NOT NULL,
CUSTOMER_ID NUMBER(25) NOT NULL,
CONSTRAINT CHECK_TYPE CHECK (TYPE IN ('HOME', 'WORK')),
CONSTRAINT FK_CUST_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT LINE1_LEN_CHECK CHECK (LENGTH(LINE_1) > 0 ),
CONSTRAINT CITY_LEN_CHECK CHECK (LENGTH(CITY) > 0 ),
CONSTRAINT STATE_LEN_CHECK CHECK (LENGTH(STATE) > 0 ),
CONSTRAINT ZIPCODE CHECK (LENGTH(ZIPCODE) = 5 AND ZIPCODE > 0 ));



CREATE TABLE EMPLOYEE (
EMP_ID NUMBER(25) PRIMARY KEY,
FIRST_NAME VARCHAR2(50 BYTE) NOT NULL,
LAST_NAME VARCHAR2(50 BYTE),
DEPARTMENT NUMBER(2),
CONSTRAINT FIRST_EMP CHECK ( LENGTH(FIRST_NAME) > 0 ),
CONSTRAINT DEPARTMENT_EMP CHECK (LENGTH(DEPARTMENT) > 0 ));



CREATE TABLE BIKE (
BIKE_ID NUMBER(25) PRIMARY KEY NOT NULL,
STATUS VARCHAR(8) NOT NULL,
LAST_SERVICE DATE,
COMMISSION_DATE DATE NOT NULL,
SERVICED_BY NUMBER(25),
BIKE_NO NUMBER(10) UNIQUE NOT NULL,
TOTAL_DISTANCE NUMBER(3) NOT NULL,
CONSTRAINT CHECK_STATUS CHECK (STATUS IN ('ACTIVE', 'INACTIVE')),
CONSTRAINT FK_SERVICED_BY FOREIGN KEY (SERVICED_BY) REFERENCES EMPLOYEE(EMP_ID));



CREATE TABLE STATION (
STATION_ID NUMBER(25) NOT NULL,
ZIPCODE NUMBER(5) NOT NULL,
STATE VARCHAR2(50) NOT NULL,
CITY VARCHAR2(50) NOT NULL,
NAME VARCHAR2(50)UNIQUE NOT NULL ,
CAPACITYS NUMBER NOT NULL,
CONSTRAINT STATION_ID_PK PRIMARY KEY (STATION_ID),
CONSTRAINT CITY_STN_CHECK CHECK (LENGTH(CITY) > 0 ),
CONSTRAINT STATE_STN_CHECK CHECK (LENGTH(STATE) > 0 ),
CONSTRAINT NAME_STN_CHECK CHECK (LENGTH(NAME) > 0 ),
CONSTRAINT CAP_STN_CHECK CHECK (CAPACITYS > 0 ),
CONSTRAINT ZIPCODE_STN_CHECK CHECK ( LENGTH(ZIPCODE) = 5 AND (ZIPCODE > 0) ) );



CREATE TABLE BIKE_AT_STATION (
BIKE_STATION_ID NUMBER(10),
BIKE_ID NUMBER(25) UNIQUE NOT NULL,
STATION_ID NUMBER(25) NOT NULL,
CONSTRAINT BIKE_STATION_ID_PK PRIMARY KEY (BIKE_STATION_ID),
CONSTRAINT FK_BIKE_ID FOREIGN KEY (BIKE_ID) REFERENCES BIKE(BIKE_ID),
CONSTRAINT FK_STATION_ID FOREIGN KEY (STATION_ID) REFERENCES STATION(STATION_ID));



CREATE TABLE MAINTENANCE (
MAINTENANCE_ID NUMBER(25) PRIMARY KEY,
SUMMARY VARCHAR(100),
DATE_OF_MAINTENANCE DATE NOT NULL,
BIKE_ID NUMBER(25) NOT NULL,
SERVICED_BY NUMBER(25) NOT NULL,
COMPLETE_DATE DATE NOT NULL,
MAINTENANCE_COST NUMBER NOT NULL,
CONSTRAINT MAINTENANCE_CHECK CHECK (MAINTENANCE_COST > 0 ),
CONSTRAINT BIKE_ID_FK FOREIGN KEY (BIKE_ID) REFERENCES BIKE(BIKE_ID),
CONSTRAINT FK_SERVICED_BY_MAN FOREIGN KEY (SERVICED_BY) REFERENCES EMPLOYEE(EMP_ID));



CREATE TABLE DISCOUNT(
DISCOUNT_ID NUMBER(25),
CUSTOMER_ID NUMBER(25),
DESCRIPTION_DISCOUNT VARCHAR2(200 BYTE),
PERCENTAGE NUMBER(3),
START_DATE DATE NOT NULL,
END_DATE DATE NOT NULL,
CONSTRAINT PERCENTAGE_CHECK CHECK (PERCENTAGE > 0 ),
CONSTRAINT DISCOUNT_ID_PK PRIMARY KEY (DISCOUNT_ID),
CONSTRAINT FK_CUSTOMER_ID_DIS FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID));



CREATE TABLE PAYMENT (
PAYMENT_ID NUMBER(25) PRIMARY KEY NOT NULL,
CUSTOMER_ID NUMBER(25) NOT NULL,
AMOUNT NUMBER NOT NULL,
PAYMENT_DATE DATE NOT NULL,
DISCOUNT_ID NUMBER(25),
EXTRA_FEE NUMBER(25),
CONSTRAINT PAYMENT_CHECK CHECK (AMOUNT > 0 ),
CONSTRAINT FK_CUST_ID_TRANS FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_DISCOUNT_ID_PAY FOREIGN KEY (DISCOUNT_ID) REFERENCES DISCOUNT(DISCOUNT_ID));



CREATE TABLE RIDE_TRANSACTION (
TRANS_ID NUMBER(25) PRIMARY KEY,
PAYMENT_ID NUMBER(25) NOT NULL,
CUSTOMER_ID NUMBER(25) NOT NULL,
BIKE_PICKUP_STATION NUMBER (25) NOT NULL,
BIKE_DROP_STATION NUMBER(25),
TRANSACTION_DATE DATE NOT NULL,
START_TIME TIMESTAMP NOT NULL,
END_TIME TIMESTAMP,
BIKE_ID NUMBER(25) NOT NULL,
DISTANCE NUMBER(10),
STATUS VARCHAR2(20) NOT NULL,
CONSTRAINT CHECK_STATUS_TRANS CHECK ((BIKE_DROP_STATION IS NULL AND END_TIME IS NULL AND (STATUS = 'INUSE' OR STATUS = 'OTP')) OR (BIKE_DROP_STATION IS NOT NULL AND END_TIME IS NOT NULL AND STATUS = 'COMPLETE')),
CONSTRAINT FK_CUST_ID_TRANSACTION FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_PAYMENTID_TRANS FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT(PAYMENT_ID),
CONSTRAINT FK_BIKE_PICK_STATION_TRANS FOREIGN KEY (BIKE_PICKUP_STATION) REFERENCES STATION (STATION_ID),
CONSTRAINT FK_BIKE_DROP_STATION_TRANS FOREIGN KEY (BIKE_DROP_STATION) REFERENCES STATION (STATION_ID),
CONSTRAINT FK_BIKE_ID_TRANS FOREIGN KEY (BIKE_ID) REFERENCES BIKE_AT_STATION(BIKE_ID));



CREATE TABLE CUSTOMER_FEEDBACK(
FEEDBACK_ID NUMBER(25) PRIMARY KEY NOT NULL,
REVIEW VARCHAR (100),
RATING NUMBER(1) NOT NULL,
CUSTOMER_ID NUMBER(25) NOT NULL,
TRANS_ID NUMBER(25) NOT NULL,
CONSTRAINT CHECK_RATING_FEED CHECK (RATING IN (1,2,3,4,5)),
CONSTRAINT FK_CUSTOMER_ID_FEED FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_TRANS_ID_FEED FOREIGN KEY (TRANS_ID) REFERENCES RIDE_TRANSACTION(TRANS_ID));



CREATE TABLE OTP (
CUSTOMER_ID NUMBER(25) UNIQUE,
OTP NUMBER(5) NOT NULL,
OTP_GENRATION_TIME TIMESTAMP DEFAULT SYSTIMESTAMP,
OTP_EXPIRE_TIME TIMESTAMP NOT NULL,
CONSTRAINT FK_CUST_ID_OTP FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
);
