----TABLES SHOULD BE CREATED IN BELOW ORDER
----CUTOMER,CUSTOMER_ADDRESS,BIKE,STATION,BIKE_AT_STATION,MAINTENANCE,RIDE_TRANSACTION,CUSTOMER_FEEDBACK,
----DISCOUNT,PAYMENT


CREATE TABLE CUSTOMER (
CUSTOMER_ID NUMBER(25),
FIRST_NAME VARCHAR2(50 BYTE) NOT NULL,
LAST_NAME VARCHAR2(50 BYTE),
GENDER VARCHAR2(6 BYTE),
EMAIL_ID  VARCHAR2(50 BYTE) NOT NULL,
CONTACT NUMBER(10) NOT NULL,
SSN_NUMBER  NUMBER(9) NOT NULL,
CUSTOMER_TYPE VARCHAR2(10 BYTE) NOT NULL,
DATE_OF_BIRTH DATE NOT NULL,
CONSTRAINT CUSTOMER_ID_PK PRIMARY KEY (CUSTOMER_ID),
CONSTRAINT EMAIL_ID_UN UNIQUE (EMAIL_ID),
CONSTRAINT CONTACT_UN UNIQUE (CONTACT),
CONSTRAINT SSN_NUMBER_UN UNIQUE (SSN_NUMBER),
CONSTRAINT CUSTOMER_TYPE_CHECK CHECK (CUSTOMER_TYPE IN  ('CASUAL','REGISTERED')));


CREATE TABLE CUSTOMER_ADDRESS (
ADDRESS_ID NUMBER PRIMARY KEY NOT NULL,
LINE_1 VARCHAR(50) NOT NULL,
LINE_2 VARCHAR(50),
CITY VARCHAR(50) NOT NULL,
STATE VARCHAR(50) NOT NULL,
ZIPCODE VARCHAR(15) NOT NULL,
TYPE VARCHAR (15) NOT NULL,
CUSTOMER_ID NUMBER NOT NULL,
CONSTRAINT CHECK_TYPE CHECK (TYPE IN ('HOME', 'WORK')),
CONSTRAINT FK_CUST_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID));


CREATE TABLE BIKE (
BIKE_ID NUMBER PRIMARY KEY NOT NULL,
STATUS VARCHAR (8) NOT NULL,
LAST_SERVICE DATE,
COMMISSION_DATE DATE NOT NULL,
SERVICE_BY VARCHAR(25),
BIKE_NO NUMBER(10) UNIQUE NOT NULL,
TOTAL_DISTANCE NUMBER NOT NULL,
CONSTRAINT CHECK_STATUS CHECK (STATUS IN ('ACTIVE', 'INACTIVE')));


CREATE TABLE STATION (
STATION_ID NUMBER(25) NOT NULL,
ZIPCODE NUMBER(5) NOT NULL,
STATE VARCHAR2(50) NOT NULL,
CITY VARCHAR2(50) NOT NULL,
NAME VARCHAR2(50)UNIQUE NOT NULL ,
CAPACITY NUMBER NOT NULL,
STATUS VARCHAR2(20) NOT NULL,
CONSTRAINT CHECK_STATUS_STATION CHECK (STATUS IN('FULL', 'AVAILABLE')),
CONSTRAINT STATION_ID_PK PRIMARY KEY (STATION_ID));


CREATE TABLE BIKE_AT_STATION (
BIKE_STATION_ID NUMBER(10),
BIKE_ID NUMBER UNIQUE NOT NULL,
STATION_ID NUMBER NOT NULL,
CONSTRAINT BIKE_STATION_ID_PK PRIMARY KEY (BIKE_STATION_ID),
CONSTRAINT FK_BIKE_ID FOREIGN KEY (BIKE_ID) REFERENCES BIKE(BIKE_ID),
CONSTRAINT FK_STATION_ID FOREIGN KEY (STATION_ID) REFERENCES STATION(STATION_ID));


CREATE TABLE MAINTENANCE (
MAINTENANCE_ID NUMBER PRIMARY KEY,
SUMMARY VARCHAR(100),
DATE_OF_MAINTENANCE DATE,
BIKE_ID NUMBER NOT NULL,
SERVICED_BY VARCHAR(25) NOT NULL,
COMPLETE_DATE DATE,
MAINTENANCE_COST NUMBER,
CONSTRAINT BIKE_ID_FK FOREIGN KEY (BIKE_ID) REFERENCES BIKE(BIKE_ID));


CREATE TABLE RIDE_TRANSACTION (
TRANS_ID NUMBER(25) PRIMARY KEY,
CUSTOMER_ID NUMBER(25) NOT NULL,
BIKE_PICKUP_STATION NUMBER (25) NOT NULL,
BIKE_DROP_STATION NUMBER(25),
TRANSACTION_DATE DATE NOT NULL,
START_TIME TIMESTAMP NOT NULL,
END_TIME TIMESTAMP,
BIKE_ID NUMBER(25) NOT NULL,
DISTANCE NUMBER(10) NOT NULL,
STATUS VARCHAR2(20) NOT NULL,
CONSTRAINT CHECK_STATUS_TRANS CHECK ((BIKE_DROP_STATION IS NULL AND END_TIME IS NULL AND STATUS = 'INUSE') OR (BIKE_DROP_STATION IS NOT NULL AND END_TIME IS NOT NULL AND STATUS = 'COMPLETE')),
CONSTRAINT FK_CUST_ID_TRANS FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_BIKE_PICK_STATION_TRANS FOREIGN KEY (BIKE_PICKUP_STATION) REFERENCES STATION (STATION_ID),
CONSTRAINT FK_BIKE_DROP_STATION_TRANS FOREIGN KEY (BIKE_DROP_STATION) REFERENCES STATION (STATION_ID),
CONSTRAINT FK_BIKE_ID_TRANS FOREIGN KEY (BIKE_ID) REFERENCES BIKE_AT_STATION(BIKE_ID));


CREATE TABLE CUSTOMER_FEEDBACK(
FEEDBACK_ID NUMBER PRIMARY KEY NOT NULL,
REVIEW VARCHAR (100),
RATING NUMBER NOT NULL,
CUSTOMER_ID NUMBER NOT NULL,
TRANS_ID NUMBER NOT NULL,
CONSTRAINT CHECK_RATING_FEED CHECK (RATING IN (1,2,3,4,5)),
CONSTRAINT FK_CUSTOMER_ID_FEED FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_TRANS_ID_FEED FOREIGN KEY (TRANS_ID) REFERENCES RIDE_TRANSACTION(TRANS_ID));

CREATE TABLE DISCOUNT(
DISCOUNT_ID NUMBER(25),
CUSTOMER_ID NUMBER NOT NULL,
DESCRIPTION_DISCOUNT VARCHAR2(200 BYTE),
PERCENTAGE NUMBER(3),
START_DATE DATE NOT NULL,
END_DATE DATE NOT NULL,
CONSTRAINT DISCOUNT_ID_PK PRIMARY KEY (DISCOUNT_ID),
CONSTRAINT FK_CUSTOMER_ID_DIS FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID));

CREATE TABLE PAYMENT (
PAYMENT_ID NUMBER PRIMARY KEY NOT NULL,
AMOUNT NUMBER NOT NULL,
PAYMENT_DATE DATE NOT NULL,
PAYMENT_TYPE VARCHAR(6) NOT NULL,
PAYMENT_TRANS_ID NUMBER NOT NULL,
DISCOUNT_ID NUMBER,
CONSTRAINT FK_PAYMENT_TRANS_ID FOREIGN KEY (PAYMENT_TRANS_ID) REFERENCES RIDE_TRANSACTION(TRANS_ID),
CONSTRAINT FK_DISCOUNT_ID_PAY FOREIGN KEY (DISCOUNT_ID) REFERENCES DISCOUNT(DISCOUNT_ID));