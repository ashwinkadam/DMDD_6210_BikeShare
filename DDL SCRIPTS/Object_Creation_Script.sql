---------------------------------------
---        RUN THE FOLLOWING SCRIPT AS MHATREA (DB_OWNER)
---------------------------------------


---------------------------------------
---        SCRIPT FOR OBJECT CREATION
---------------------------------------


DECLARE 
OBJ_NAME VARCHAR(1000);
BEGIN
FOR I IN (SELECT OBJECT_NAME, OBJECT_TYPE FROM USER_OBJECTS WHERE OBJECT_TYPE IN ('TABLE', 'SEQUENCE') )
LOOP
    IF I.OBJECT_TYPE = 'TABLE' THEN
    
        OBJ_NAME := ('DROP ' || I.OBJECT_TYPE ||' ' || I.OBJECT_NAME || ' CASCADE CONSTRAINTS');
        DBMS_OUTPUT.PUT_LINE(OBJ_NAME);
        EXECUTE IMMEDIATE OBJ_NAME;
    
    ELSIF I.OBJECT_TYPE = 'SEQUENCE' THEN
        OBJ_NAME := 'DROP ' || I.OBJECT_TYPE ||' '|| I.OBJECT_NAME;
        DBMS_OUTPUT.PUT_LINE(OBJ_NAME);
        EXECUTE IMMEDIATE OBJ_NAME;
    ELSE 
        DBMS_OUTPUT.PUT_LINE('STARTING FRESH');
    
    END IF;

END LOOP;
DBMS_OUTPUT.PUT_LINE('STARTING FRESH');
END;
/



---------------------------------------
---        TABLES 
---------------------------------------

CREATE TABLE CUSTOMER (
CUSTOMER_ID NUMBER(25),
FIRST_NAME VARCHAR2(50 BYTE) NOT NULL,
LAST_NAME VARCHAR2(50 BYTE),
GENDER VARCHAR2(6 BYTE),
EMAIL_ID  VARCHAR2(50 BYTE) NOT NULL,
CONTACT NUMBER(10) NOT NULL,
SSN_NUMBER  NUMBER(9) NOT NULL,
CUSTOMER_TYPE VARCHAR2(10 BYTE) NOT NULL,
DATE_OF_BIRTH DATE NOT NULL,
CONSTRAINT CUSTOMER_ID_PK PRIMARY KEY (CUSTOMER_ID),
CONSTRAINT EMAIL_ID_UN UNIQUE (EMAIL_ID),
CONSTRAINT CONTACT_UN UNIQUE (CONTACT),
CONSTRAINT SSN_NUMBER_UN UNIQUE (SSN_NUMBER),
CONSTRAINT CUSTOMER_TYPE_CHECK CHECK (CUSTOMER_TYPE IN  ('CASUAL','REGISTERED') ),
CONSTRAINT GENDER_TYPE_CHECK CHECK (GENDER IN  ('M','F','OTHERS') ),
CONSTRAINT CONTACT_LEN_CHECK CHECK (LENGTH(CONTACT) = 10 AND (CONTACT > 0) ),
CONSTRAINT SSN_LEN_CHECK CHECK (LENGTH(SSN_NUMBER) = 9 AND (SSN_NUMBER > 0) ));


CREATE TABLE CUSTOMER_ADDRESS (
ADDRESS_ID NUMBER(25) PRIMARY KEY NOT NULL,
LINE_1 VARCHAR(50) NOT NULL,
LINE_2 VARCHAR(50),
CITY VARCHAR(50) NOT NULL,
STATE VARCHAR(50) NOT NULL,
ZIPCODE VARCHAR(5) NOT NULL,
TYPE VARCHAR (15) NOT NULL,
CUSTOMER_ID NUMBER(25) NOT NULL,
CONSTRAINT CHECK_TYPE CHECK (TYPE IN ('HOME', 'WORK')),
CONSTRAINT FK_CUST_ID FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT LINE1_LEN_CHECK CHECK (LENGTH(LINE_1) > 0 ),
CONSTRAINT CITY_LEN_CHECK CHECK (LENGTH(CITY) > 0 ),
CONSTRAINT STATE_LEN_CHECK CHECK (LENGTH(STATE) > 0 ),
CONSTRAINT ZIPCODE CHECK (LENGTH(ZIPCODE) = 5 AND (LENGTH(ZIPCODE) > 0 )));


CREATE TABLE EMPLOYEE (
EMP_ID NUMBER(25) PRIMARY KEY,
FIRST_NAME VARCHAR2(50 BYTE) NOT NULL,
LAST_NAME VARCHAR2(50 BYTE),
DEPARTMENT NUMBER(2),
CONSTRAINT FIRST_EMP CHECK ( LENGTH(FIRST_NAME) > 0 ),
CONSTRAINT DEPARTMENT_EMP CHECK (LENGTH(DEPARTMENT) > 0 ));


CREATE TABLE BIKE (
BIKE_ID NUMBER(25) PRIMARY KEY NOT NULL,
STATUS VARCHAR(8) NOT NULL,
LAST_SERVICE DATE,
COMMISSION_DATE DATE NOT NULL,
SERVICED_BY NUMBER(25),
BIKE_NO NUMBER(10) UNIQUE NOT NULL,
TOTAL_DISTANCE NUMBER(3) NOT NULL,
CONSTRAINT CHECK_STATUS CHECK (STATUS IN ('ACTIVE', 'INACTIVE')),
CONSTRAINT FK_SERVICED_BY FOREIGN KEY (SERVICED_BY) REFERENCES EMPLOYEE(EMP_ID));


CREATE TABLE STATION (
STATION_ID NUMBER(25) NOT NULL,
ZIPCODE VARCHAR(5) NOT NULL,
STATE VARCHAR2(50) NOT NULL,
CITY VARCHAR2(50) NOT NULL,
NAME VARCHAR2(50)UNIQUE NOT NULL ,
CAPACITYS NUMBER NOT NULL,
CONSTRAINT STATION_ID_PK PRIMARY KEY (STATION_ID),
CONSTRAINT CITY_STN_CHECK CHECK (LENGTH(CITY) > 0 ),
CONSTRAINT STATE_STN_CHECK CHECK (LENGTH(STATE) > 0 ),
CONSTRAINT NAME_STN_CHECK CHECK (LENGTH(NAME) > 0 ),
CONSTRAINT CAP_STN_CHECK CHECK (CAPACITYS > 0 ),
CONSTRAINT ZIPCODE_STN_CHECK CHECK ( LENGTH(ZIPCODE) = 5 AND (LENGTH(ZIPCODE) > 0) ) );


CREATE TABLE BIKE_AT_STATION (
BIKE_STATION_ID NUMBER(10),
BIKE_ID NUMBER(25) UNIQUE NOT NULL,
STATION_ID NUMBER(25) NOT NULL,
CONSTRAINT BIKE_STATION_ID_PK PRIMARY KEY (BIKE_STATION_ID),
CONSTRAINT FK_BIKE_ID FOREIGN KEY (BIKE_ID) REFERENCES BIKE(BIKE_ID),
CONSTRAINT FK_STATION_ID FOREIGN KEY (STATION_ID) REFERENCES STATION(STATION_ID));


CREATE TABLE MAINTENANCE (
MAINTENANCE_ID NUMBER(25) PRIMARY KEY,
SUMMARY VARCHAR(100),
DATE_OF_MAINTENANCE DATE NOT NULL,
BIKE_ID NUMBER(25) NOT NULL,
SERVICED_BY NUMBER(25) NOT NULL,
COMPLETE_DATE DATE NOT NULL,
MAINTENANCE_COST NUMBER NOT NULL,
CONSTRAINT MAINTENANCE_CHECK CHECK (MAINTENANCE_COST > 0 ),
CONSTRAINT BIKE_ID_FK FOREIGN KEY (BIKE_ID) REFERENCES BIKE(BIKE_ID),
CONSTRAINT FK_SERVICED_BY_MAN FOREIGN KEY (SERVICED_BY) REFERENCES EMPLOYEE(EMP_ID));

CREATE TABLE DISCOUNT(
DISCOUNT_ID NUMBER(25),
CUSTOMER_ID NUMBER(25),
DESCRIPTION_DISCOUNT VARCHAR2(200 BYTE),
PERCENTAGE NUMBER(3),
START_DATE DATE NOT NULL,
END_DATE DATE NOT NULL,
CONSTRAINT PERCENTAGE_CHECK CHECK (PERCENTAGE > 0 ),
CONSTRAINT DISCOUNT_ID_PK PRIMARY KEY (DISCOUNT_ID),
CONSTRAINT FK_CUSTOMER_ID_DIS FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID));

CREATE TABLE PAYMENT (
PAYMENT_ID NUMBER(25) PRIMARY KEY NOT NULL,
CUSTOMER_ID NUMBER(25) NOT NULL,
AMOUNT NUMBER NOT NULL,
PAYMENT_DATE DATE NOT NULL,
DISCOUNT_ID NUMBER(25),
EXTRA_FEE NUMBER(25),
CONSTRAINT PAYMENT_CHECK CHECK (AMOUNT > 0 ),
CONSTRAINT FK_CUST_ID_TRANS FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_DISCOUNT_ID_PAY FOREIGN KEY (DISCOUNT_ID) REFERENCES DISCOUNT(DISCOUNT_ID));


CREATE TABLE RIDE_TRANSACTION (
TRANS_ID NUMBER(25) PRIMARY KEY,
PAYMENT_ID NUMBER(25) NOT NULL,
CUSTOMER_ID NUMBER(25) NOT NULL,
BIKE_PICKUP_STATION NUMBER (25) NOT NULL,
BIKE_DROP_STATION NUMBER(25),
TRANSACTION_DATE DATE NOT NULL,
START_TIME TIMESTAMP NOT NULL,
END_TIME TIMESTAMP,
BIKE_ID NUMBER(25) NOT NULL,
DISTANCE NUMBER(10),
STATUS VARCHAR2(20) NOT NULL,
CONSTRAINT CHECK_STATUS_TRANS CHECK ((BIKE_DROP_STATION IS NULL AND END_TIME IS NULL AND (STATUS = 'INUSE' OR STATUS = 'OTP')) OR (BIKE_DROP_STATION IS NOT NULL AND END_TIME IS NOT NULL AND STATUS = 'COMPLETE')),
CONSTRAINT FK_CUST_ID_TRANSACTION FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_PAYMENTID_TRANS FOREIGN KEY (PAYMENT_ID) REFERENCES PAYMENT(PAYMENT_ID),
CONSTRAINT FK_BIKE_PICK_STATION_TRANS FOREIGN KEY (BIKE_PICKUP_STATION) REFERENCES STATION (STATION_ID),
CONSTRAINT FK_BIKE_DROP_STATION_TRANS FOREIGN KEY (BIKE_DROP_STATION) REFERENCES STATION (STATION_ID),
CONSTRAINT FK_BIKE_ID_TRANS FOREIGN KEY (BIKE_ID) REFERENCES BIKE_AT_STATION(BIKE_ID));


CREATE TABLE CUSTOMER_FEEDBACK(
FEEDBACK_ID NUMBER(25) PRIMARY KEY NOT NULL,
REVIEW VARCHAR (100),
RATING NUMBER(1) NOT NULL,
CUSTOMER_ID NUMBER(25) NOT NULL,
TRANS_ID NUMBER(25) NOT NULL,
CONSTRAINT CHECK_RATING_FEED CHECK (RATING IN (1,2,3,4,5)),
CONSTRAINT FK_CUSTOMER_ID_FEED FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID),
CONSTRAINT FK_TRANS_ID_FEED FOREIGN KEY (TRANS_ID) REFERENCES RIDE_TRANSACTION(TRANS_ID));

CREATE TABLE OTP (
CUSTOMER_ID NUMBER(25) UNIQUE,
OTP NUMBER(5) NOT NULL,
OTP_GENRATION_TIME TIMESTAMP DEFAULT SYSTIMESTAMP,
OTP_EXPIRE_TIME TIMESTAMP NOT NULL,
CONSTRAINT FK_CUST_ID_OTP FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID)
);

---------------------------------------
---        SEQUENCES
---------------------------------------

----------------- CUSTOMER SEQUENCE ------------------------------------------------------

CREATE SEQUENCE CUSTOMER_SEQ
INCREMENT BY 1
START WITH 1000;

------------------- CUSTOMER ADDRESS SEQUENCE ------------------------------------------

CREATE SEQUENCE CUSTOMER_ADDRESS_SEQ
INCREMENT BY 1
START WITH 1;

------------------PAYMENT SEQUENCE ----------------------------------


CREATE SEQUENCE PAYMENTSEQ
START WITH 1 INCREMENT BY 1;

------------------RIDE TRANSACTION SEQUENCE ----------------------------------

CREATE SEQUENCE RIDETRANSACTIONSEQ
START WITH 1 INCREMENT BY 1;


---------------------------------------
---        STORE PROCEDURES
---------------------------------------

------------------ CUSTOMER LOGIN PROCEDURE ----------------------------------------------

CREATE OR REPLACE PROCEDURE CUSTOMER_LOGIN (
FIRSTNAME CUSTOMER.FIRST_NAME%TYPE,
LASTNAME CUSTOMER.LAST_NAME%TYPE,
GENDER CUSTOMER.GENDER%TYPE,
EMAIL CUSTOMER.EMAIL_ID%TYPE,
CONTACTNUMBER CUSTOMER.CONTACT%TYPE,
SSN CUSTOMER.SSN_NUMBER%TYPE,
CUSTOMERTYPE CUSTOMER.CUSTOMER_TYPE%TYPE,
DATEOFBIRTH CUSTOMER.DATE_OF_BIRTH%TYPE
)
AS
---VARIABLES
COUNT_A NUMBER;
COUNT_C NUMBER;
SEQUENCE_HOLDER NUMBER;
MISSING_VALUE EXCEPTION;
CUSTOMER_ADDRESS_NOT_FOUND EXCEPTION;
CHECK_INVALID EXCEPTION;
PRAGMA EXCEPTION_INIT(CHECK_INVALID, -2290);




BEGIN



IF (FIRSTNAME IS NULL) OR (EMAIL IS NULL) OR (CONTACTNUMBER IS NULL) OR (SSN IS NULL) OR (CUSTOMERTYPE IS NULL) OR (DATEOFBIRTH IS NULL) THEN

RAISE MISSING_VALUE;



ELSE
SELECT COUNT(*)
INTO COUNT_C
FROM CUSTOMER
WHERE SSN_NUMBER = SSN OR CONTACT = CONTACTNUMBER OR EMAIL_ID = EMAIL;

IF COUNT_C = 0 THEN



INSERT INTO CUSTOMER (CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER,EMAIL_ID,CONTACT,SSN_NUMBER,CUSTOMER_TYPE,DATE_OF_BIRTH)
VALUES (CUSTOMER_SEQ.NEXTVAL, (SELECT INITCAP(FIRSTNAME) FROM DUAL) ,( SELECT INITCAP(LASTNAME) FROM DUAL) ,GENDER,EMAIL,CONTACTNUMBER,SSN, CUSTOMERTYPE, DATEOFBIRTH);

DBMS_OUTPUT.PUT_LINE('WE HAVE SUCCESFULLY INSERTED YOUR DETAILS, YOUR CUSTOMER ID IS ------> ' ||CUSTOMER_SEQ.CURRVAL );

COMMIT;

SEQUENCE_HOLDER := CUSTOMER_SEQ.CURRVAL;

SELECT COUNT(*)
INTO COUNT_A
FROM CUSTOMER_ADDRESS
WHERE CUSTOMER_ID = SEQUENCE_HOLDER ;

IF COUNT_A = 0 THEN

DBMS_OUTPUT.PUT_LINE('ENTER CUSTOMER ADDRESS BEFORE BOOKING RIDE');

ELSE

DBMS_OUTPUT.PUT_LINE('ALL SET FOR RIDE');
END IF;

ELSE
DBMS_OUTPUT.PUT_LINE('DUPLICATE ENTRY FOUND');

END IF;
END IF;



EXCEPTION
WHEN MISSING_VALUE THEN
DBMS_OUTPUT.PUT_LINE('PLEASE FILL ALL THE REQUIRED FIELDS');



WHEN CUSTOMER_ADDRESS_NOT_FOUND THEN
DBMS_OUTPUT.PUT_LINE('PLEASE ENTER YOUR ADDRESS');

WHEN CHECK_INVALID THEN
DBMS_OUTPUT.PUT_LINE('CHECK CONST VOILATED');

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('INVALID INPUT');
END;
/

---------------------- CUSTOMER ADDRESS PROCEDURE ------------------------------------------------------

CREATE OR REPLACE PROCEDURE CUSTOMER_ADDRESS_ENTER (
LINE1 CUSTOMER_ADDRESS.LINE_1%TYPE,
LINE2 CUSTOMER_ADDRESS.LINE_2%TYPE,
CITY CUSTOMER_ADDRESS.CITY%TYPE,
STATE CUSTOMER_ADDRESS.STATE%TYPE,
ZIPCODE CUSTOMER_ADDRESS.ZIPCODE%TYPE,
ADD_TYPE CUSTOMER_ADDRESS.TYPE%TYPE,
A_CUSTOMER_ID CUSTOMER_ADDRESS.CUSTOMER_ID%TYPE,
ACTION IN VARCHAR2
)
AS
---VARIABLES
V_CUSTOMER_ADDRESS NUMBER;
MISSING_VALUE EXCEPTION;
V_CUSTOMER_ADDRESS_COUNT NUMBER;
V_ACTION EXCEPTION;
V_INSERT EXCEPTION;
V_UPDATE EXCEPTION;
CHECK_INVALID EXCEPTION;
PRAGMA EXCEPTION_INIT(CHECK_INVALID, -2290);


BEGIN



SELECT COUNT(1)
INTO V_CUSTOMER_ADDRESS_COUNT
FROM CUSTOMER_ADDRESS
WHERE (CUSTOMER_ID = A_CUSTOMER_ID);



IF (LINE1 IS NULL) OR (CITY IS NULL) OR (STATE IS NULL) OR (ZIPCODE IS NULL) OR (ADD_TYPE IS NULL) OR (A_CUSTOMER_ID IS NULL) OR (ACTION IS NULL) THEN
RAISE MISSING_VALUE;
ELSE
IF V_CUSTOMER_ADDRESS_COUNT = 0 THEN
IF ACTION = 'INSERT' THEN
DBMS_OUTPUT.PUT_LINE('CUSTOMER ADDRESS SUCCESFULLY ENTERED');
INSERT INTO CUSTOMER_ADDRESS (ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES (CUSTOMER_ADDRESS_SEQ.NEXTVAL, LINE1, LINE2, CITY, STATE, ZIPCODE, ADD_TYPE, A_CUSTOMER_ID);
COMMIT;
ELSE
RAISE V_INSERT;

END IF;

ELSIF V_CUSTOMER_ADDRESS_COUNT = 1 THEN
IF ACTION = 'UPDATE' THEN
DBMS_OUTPUT.PUT_LINE('CUSTOMER ADDRESS SUCESFULLY UPDATED');
UPDATE CUSTOMER_ADDRESS SET LINE_1 = LINE1 WHERE CUSTOMER_ID = A_CUSTOMER_ID;
UPDATE CUSTOMER_ADDRESS SET LINE_2 = LINE2 WHERE CUSTOMER_ID = A_CUSTOMER_ID;
UPDATE CUSTOMER_ADDRESS SET CITY = CITY WHERE CUSTOMER_ID = A_CUSTOMER_ID;
UPDATE CUSTOMER_ADDRESS SET STATE = STATE WHERE CUSTOMER_ID = A_CUSTOMER_ID;
UPDATE CUSTOMER_ADDRESS SET ZIPCODE = ZIPCODE WHERE CUSTOMER_ID = A_CUSTOMER_ID;
UPDATE CUSTOMER_ADDRESS SET TYPE = ADD_TYPE WHERE CUSTOMER_ID = A_CUSTOMER_ID;
COMMIT;
ELSE
RAISE V_UPDATE;
END IF;
ELSE
RAISE V_ACTION;
END IF;
END IF;



EXCEPTION



WHEN MISSING_VALUE THEN
DBMS_OUTPUT.PUT_LINE('PLEASE FILL ALL THE REQUIRED FIELDS');



WHEN V_ACTION THEN
DBMS_OUTPUT.PUT_LINE('PLEASE ENTER INSERT OR UPDATE');



WHEN V_INSERT THEN
DBMS_OUTPUT.PUT_LINE('YOU DO NOT HAVE AN ADDRESS, PLEASE ENTER YOUR ADDRESS');



WHEN V_UPDATE THEN
DBMS_OUTPUT.PUT_LINE('YOU ALREADY HAVE AN ADDRESS, YOU CAN ALWAYS UPDATE THE ADDRESS USING UPDATE ACTION');

WHEN CHECK_INVALID THEN
DBMS_OUTPUT.PUT_LINE('CHECK CONST VOILATED');

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('INVALID INPUT');

END;
/

----------------------------------------BOOK RIDE SEQUENCE ------------------------------------------------------------------------------------

--DISCOUNT ENTER
CREATE OR REPLACE PROCEDURE BOOK_RIDE ( CUST IN NUMBER, AMOUNT IN NUMBER) AS

-- VARIBLE
COUNT_C NUMBER;
COUNT_A NUMBER;
CHECKER EXCEPTION;
ADDRESS EXCEPTION;
CHECK_INVALID EXCEPTION;
PRAGMA EXCEPTION_INIT(CHECK_INVALID, -2290);

BEGIN

SELECT COUNT(*)
INTO COUNT_A 
FROM CUSTOMER_ADDRESS
WHERE CUSTOMER_ID = CUST;

IF COUNT_A < 1 THEN 
    
    RAISE ADDRESS;
    
END IF;

SELECT COUNT(*)
INTO COUNT_C
FROM CUSTOMER
WHERE CUSTOMER_ID = CUST;

IF (COUNT_C > 0) AND AMOUNT = 5 THEN

    DBMS_OUTPUT.PUT_LINE('ENTERING PAYMENT IDS AGAINST CUSTOMER ID');
    
    INSERT INTO PAYMENT(PAYMENT_ID,CUSTOMER_ID,AMOUNT,PAYMENT_DATE) 
    VALUES (PAYMENTSEQ.NEXTVAL,CUST,AMOUNT,SYSDATE);
    DBMS_OUTPUT.PUT_LINE('PAYMENT ID AND CUSTOMER ID GENERATED---> ' || PAYMENTSEQ.CURRVAL || ' - ' || CUST );
    COMMIT;
ELSE 
    DBMS_OUTPUT.PUT_LINE('CUSTOMER ID INVALID');
    
END IF;

EXCEPTION 

    WHEN ADDRESS THEN 
    
    DBMS_OUTPUT.PUT_LINE('PLEASE ENTER VALID ADDRESS BEFORE BOOKING A RIDE');
 
 WHEN CHECK_INVALID THEN
DBMS_OUTPUT.PUT_LINE('CHECK CONST VOILATED');

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('INVALID INPUT');   
    
END;
/
-----------------------------------------------------------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE OTP_GEN(CUST IN NUMBER) AS 

COUNT_C NUMBER;
OTP_HOLDER NUMBER;


BEGIN

SELECT COUNT(*)
INTO COUNT_C
FROM OTP
WHERE CUSTOMER_ID = CUST;

IF COUNT_C <= 0 THEN

    SELECT TRUNC(DBMS_RANDOM.VALUE(10000,99999)) NUM INTO OTP_HOLDER FROM DUAL;
    
    INSERT INTO OTP (CUSTOMER_ID, OTP, OTP_GENRATION_TIME, OTP_EXPIRE_TIME)
    VALUES (CUST, OTP_HOLDER, SYSTIMESTAMP, SYSTIMESTAMP + (2/(24*60)) );
    
    DBMS_OUTPUT.PUT_LINE('OTP FOR CUSTOMER ID ' || CUST || ' IS ' || OTP_HOLDER);
    DBMS_OUTPUT.PUT_LINE('OTP VALID FOR NEXT 2MINS');
    
ELSE 
    DBMS_OUTPUT.PUT_LINE('OLD OTP EXHAUSTED ');
    DELETE FROM OTP 
    WHERE CUSTOMER_ID = CUST;
END IF;

EXCEPTION

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('INVALID INPUT');

END;
/

-----------------------------------------ENTER RIDE DETAILS -------------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE ENTER_RIDE_DETAILS (CUST IN NUMBER, PAYID IN NUMBER, PICK IN NUMBER, BIKE IN NUMBER) AS 
-- VARIABLE
 
 DISTANCE NUMBER := 8;
 COUNT_C NUMBER;
 COUNT_VERIFY NUMBER;
 COUNT_OTP NUMBER;
 COUNT_COMPLETE NUMBER;
 COUNT_B NUMBER;
 REENTRY EXCEPTION;
 REGEN EXCEPTION;
 COMP EXCEPTION;
 ACTIVE_COUNT NUMBER;
 INACTIVE EXCEPTION;
CHECK_INVALID EXCEPTION;
PRAGMA EXCEPTION_INIT(CHECK_INVALID, -2290);

BEGIN

    SELECT COUNT(*)
    INTO COUNT_C
    FROM PAYMENT
    WHERE CUSTOMER_ID = CUST AND PAYMENT_ID = PAYID;
    
    -- REGENRATION OF OTP
    SELECT COUNT(*)
    INTO COUNT_OTP
    FROM RIDE_TRANSACTION
    WHERE CUSTOMER_ID = CUST AND PAYMENT_ID = PAYID AND STATUS = 'OTP';
    
    --TO PREVENT DUPLICATE ENTRY
    SELECT COUNT(*)
    INTO COUNT_VERIFY 
    FROM RIDE_TRANSACTION
    WHERE CUSTOMER_ID = CUST AND PAYMENT_ID = PAYID AND STATUS = 'INUSE';
    
    --TO PREVENT DUPLICATE ENTRY
    SELECT COUNT(*)
    INTO COUNT_COMPLETE
    FROM RIDE_TRANSACTION
    WHERE CUSTOMER_ID = CUST AND PAYMENT_ID = PAYID AND STATUS = 'COMPLETE';
    
    --BIKE ACTIVE CHECKING 
    SELECT COUNT(*)
    INTO ACTIVE_COUNT 
    FROM BIKE 
    WHERE BIKE_ID = BIKE AND STATUS = 'ACTIVE';
    

IF (COUNT_VERIFY = 1) THEN 
     
     RAISE REENTRY;
     
END IF;

IF (COUNT_OTP = 1) THEN
    
    OTP_GEN(CUST);
    RAISE REGEN;

END IF;

IF (COUNT_COMPLETE = 1) THEN
    
    RAISE COMP;

END IF;

IF ACTIVE_COUNT < 1 THEN

RAISE INACTIVE;

END IF;

IF (COUNT_C > 0) AND (COUNT_VERIFY = 0) AND (COUNT_OTP = 0) THEN 

    
                DBMS_OUTPUT.PUT_LINE('PAYMENT ID AND CUSTOMER ID VERIFIED');
                
                SELECT COUNT(*)
                INTO COUNT_B
                FROM BIKE_AT_STATION
                WHERE BIKE_ID = BIKE AND STATION_ID = PICK;
                
                IF COUNT_B > 0 THEN
                    DBMS_OUTPUT.PUT_LINE('PICKUP STATION AND BIKE ID VERIFIED'); 
                    
                    INSERT INTO RIDE_TRANSACTION(TRANS_ID,PAYMENT_ID,CUSTOMER_ID,BIKE_PICKUP_STATION,TRANSACTION_DATE,START_TIME,BIKE_ID, DISTANCE, STATUS)
                    VALUES(RIDETRANSACTIONSEQ.NEXTVAL, PAYID, CUST, PICK, SYSDATE, SYSTIMESTAMP, BIKE, DISTANCE, 'OTP');
                    
                    DBMS_OUTPUT.PUT_LINE('RIDE TRANSACTION INSERT SUCCESSFUL PLEASE NOTE THE TRANSID ' || RIDETRANSACTIONSEQ.CURRVAL || ' AND GENERATED OTP'); 
                    
                    OTP_GEN(CUST);
                    
                
                ELSE 
                    DBMS_OUTPUT.PUT_LINE('BIKE ID AND PICKUP STATION ID COMBINATION DOES NOT EXIST PLEASE TRY PICKING OTHER BIKE OR STATION'); 
                
                END IF;
                
                COMMIT;
ELSE 

    DBMS_OUTPUT.PUT_LINE('INVALID PAYMENT ID OR CUSTOMER ID');
    
END IF;

EXCEPTION 
        
        WHEN REENTRY THEN 
        DBMS_OUTPUT.PUT_LINE('THIS RIDE HAS ALREADY STARTED PLEASE BOOK ANOTHER NEW RIDE');
        
        WHEN REGEN THEN
        DBMS_OUTPUT.PUT_LINE('RE RUN TO GENERATE NEW OTP');
        
        WHEN COMP THEN
        DBMS_OUTPUT.PUT_LINE('THIS RIDE IS COMPLETED PLEASE BOOK ANOTHER NEW RIDE');
        
        WHEN INACTIVE THEN 
        DBMS_OUTPUT.PUT_LINE('BIKE STATUS INACTIVE, PLEASE CHOOSE OTHER AVAILABLE BIKES');
        
        WHEN CHECK_INVALID THEN
        DBMS_OUTPUT.PUT_LINE('CHECK CONST VOILATED');

        WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('INVALID INPUT');
        
END;
/
--------------------------------- OTP AUTHENTICATION -------------------------------------------------

CREATE OR REPLACE PROCEDURE AUTHENTICATE(CUST IN NUMBER, OTP_CHECK IN NUMBER, TID IN NUMBER) AS

OTP_COUNTER NUMBER;
CHECK_INVALID EXCEPTION;
PRAGMA EXCEPTION_INIT(CHECK_INVALID, -2290);

BEGIN 

--DELETE EXPIRED OTP'S
DELETE FROM OTP 
WHERE OTP_EXPIRE_TIME < SYSDATE ;

SELECT COUNT(*) 
INTO OTP_COUNTER 
FROM OTP O INNER JOIN
RIDE_TRANSACTION R ON 
O.CUSTOMER_ID = R.CUSTOMER_ID 
WHERE (O.CUSTOMER_ID = CUST) AND (R.TRANS_ID = TID) AND (O.OTP = OTP_CHECK ) AND (R.STATUS = 'OTP') AND (R.END_TIME IS NULL) AND (SYSDATE BETWEEN O.OTP_GENRATION_TIME AND O.OTP_EXPIRE_TIME) ;


IF OTP_COUNTER = 1 THEN 
    
    UPDATE RIDE_TRANSACTION 
    SET STATUS = 'INUSE'
    WHERE CUSTOMER_ID = CUST AND TRANS_ID = TID;
    
    DBMS_OUTPUT.PUT_LINE('RIDE STATUS CHANGED TO INUSE');
    DBMS_OUTPUT.PUT_LINE('SUCCESS! HAVE A SAFE RIDE :)');
    
    DELETE FROM OTP 
    WHERE CUSTOMER_ID = CUST AND OTP = OTP_CHECK;
    
    DBMS_OUTPUT.PUT_LINE('OTP EXAUSTED');
    
    
ELSE 
    DBMS_OUTPUT.PUT_LINE('INVALID OTP OR CUSTOMER ID OR TRANSACTION ID'); 
    
    
END IF;

EXCEPTION

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('INVALID INPUT');

END;
/


---------------------------------------
---        FUNCTION
---------------------------------------
---------------------------------------FEE CALCULATION FUNCTION------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION EXTRA_FEE_CAL(TRANSID IN NUMBER, CUST IN NUMBER)
RETURN NUMBER
AS
    EXTRA_FEE NUMBER := 0;
    DIFF_TIME NUMBER := 0;
    
BEGIN

    SELECT EXTRACT(MINUTE FROM (SYSTIMESTAMP - START_TIME)) 
    INTO DIFF_TIME  
    FROM RIDE_TRANSACTION
    WHERE TRANS_ID = TRANSID AND CUSTOMER_ID = CUST;    

    IF (DIFF_TIME) <= 30 THEN
    
        EXTRA_FEE := 0;
        
    ELSIF (DIFF_TIME) > 30 THEN 
    
         EXTRA_FEE := ROUND(((DIFF_TIME - 30)/15) * 2.5);
         
    END IF;

RETURN EXTRA_FEE;

EXCEPTION

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('INVALID INPUT');

END;
/

------------------------------------------------------DISTANCE UPDATE ------------------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE DISTANCE_UPDATE (BIKE IN NUMBER, TRANSID IN NUMBER) AS 

RIDE_DISTANCE NUMBER;
BIKE_DISTANCE NUMBER;
TOTAL NUMBER;
COUNT_B NUMBER;
CHECK_INVALID EXCEPTION;
PRAGMA EXCEPTION_INIT(CHECK_INVALID, -2290);

BEGIN 

SELECT COUNT(*)
INTO COUNT_B
FROM BIKE 
WHERE BIKE_ID = BIKE;

IF COUNT_B > 0 THEN

    SELECT DISTANCE 
    INTO RIDE_DISTANCE 
    FROM RIDE_TRANSACTION
    WHERE TRANS_ID = TRANSID;
    
    SELECT TOTAL_DISTANCE 
    INTO BIKE_DISTANCE 
    FROM BIKE
    WHERE BIKE_ID = BIKE;
    
    TOTAL := BIKE_DISTANCE + RIDE_DISTANCE;
    
    UPDATE BIKE 
    SET TOTAL_DISTANCE = TOTAL
    WHERE BIKE_ID = BIKE;
    
    DBMS_OUTPUT.PUT_LINE('RIDE DISTANCE UPDATED AGAINST BIKE NO. ' || BIKE || 'TOTAL DISTANCE NOW ---> ' || TOTAL || '.');
    
    COMMIT;

ELSE 
    
    DBMS_OUTPUT.PUT_LINE('BIKE NOT FOUND');

END IF;

EXCEPTION

WHEN CHECK_INVALID THEN
DBMS_OUTPUT.PUT_LINE('CHECK CONST VOILATED');

WHEN OTHERS THEN
DBMS_OUTPUT.PUT_LINE('INVALID INPUT');

END;
/
---------------------------------------------------- COMPLETE RIDE ----------------------------------------------------------------------------------------------

CREATE OR REPLACE PROCEDURE COMPLETE_RIDE(CUST IN NUMBER, TRANSID IN NUMBER, DROPS IN NUMBER, BIKE IN NUMBER) AS 

COUNT_C NUMBER;
S_CAP NUMBER;
A_CAP NUMBER;
BIKEPICKS NUMBER;
INVALID EXCEPTION;
SFULL EXCEPTION;
EXTRA_FEEC NUMBER;
PAYID_REF NUMBER;

CHECK_INVALID EXCEPTION;
PRAGMA EXCEPTION_INIT(CHECK_INVALID, -2290);

BEGIN

SELECT COUNT(*) 
INTO COUNT_C 
FROM RIDE_TRANSACTION
WHERE TRANS_ID = TRANSID
AND CUSTOMER_ID = CUST
AND STATUS = 'INUSE'
AND BIKE_ID = BIKE;

IF COUNT_C > 0 THEN

    SELECT CAPACITYS 
    INTO S_CAP 
    FROM STATION
    WHERE STATION_ID = DROPS;

    SELECT COUNT(*) 
    INTO A_CAP 
    FROM BIKE_AT_STATION
    WHERE STATION_ID = DROPS;

    IF  A_CAP < S_CAP THEN
    
        SELECT BIKE_PICKUP_STATION
        INTO BIKEPICKS
        FROM RIDE_TRANSACTION
        WHERE TRANS_ID = TRANSID
        AND CUSTOMER_ID = CUST;
        
        IF DROPS != BIKEPICKS THEN

            UPDATE BIKE_AT_STATION 
            SET STATION_ID = DROPS
            WHERE BIKE_ID = BIKE;
            DBMS_OUTPUT.PUT_LINE('NEW DROP STATION SUCCESSFULLY UPDATED');
            
            UPDATE RIDE_TRANSACTION
            SET STATUS = 'COMPLETE',
            BIKE_DROP_STATION = DROPS,
            END_TIME = SYSTIMESTAMP
            WHERE TRANS_ID = TRANSID
            AND CUSTOMER_ID = CUST;
            
            DBMS_OUTPUT.PUT_LINE('RIDE STATUS UPDATED TO COMPELETE');
            
        ELSE 
            DBMS_OUTPUT.PUT_LINE('BIKE RETURNED ON SAME STATION');
            
            UPDATE RIDE_TRANSACTION
            SET STATUS = 'COMPLETE',
            BIKE_DROP_STATION = DROPS,
            END_TIME = SYSTIMESTAMP
            WHERE TRANS_ID = TRANSID
            AND CUSTOMER_ID = CUST;
            
            DBMS_OUTPUT.PUT_LINE('RIDE STATUS UPDATED TO COMPELETE');
            
        END IF;
        
        EXTRA_FEEC := EXTRA_FEE_CAL(TRANSID, CUST);
        
        IF EXTRA_FEEC > 0 THEN
            
            SELECT PAYMENT_ID 
            INTO PAYID_REF
            FROM RIDE_TRANSACTION
            WHERE TRANS_ID = TRANSID AND CUSTOMER_ID = CUST;
            
            UPDATE PAYMENT
            SET EXTRA_FEE = EXTRA_FEEC
            WHERE CUSTOMER_ID = CUST AND PAYMENT_ID = PAYID_REF;
            
            DBMS_OUTPUT.PUT_LINE('EXTRA FEE OF ' || EXTRA_FEEC || ' CHARGED AGAINST CUSTOMER ID ' || CUST || ' FOR RIDE TRANSACTION ID ' || TRANSID);
            
            COMMIT;
        
        ELSE 
        
            DBMS_OUTPUT.PUT_LINE('NO EXTRA FEE CHARGED! THANK YOU WE HOPE TO SEE YOU BACK SOON! :)');
            
            COMMIT;
        
        END IF;
            
        DISTANCE_UPDATE(BIKE,TRANSID);
        
        COMMIT;
            
    ELSE 
    
        RAISE SFULL;
        
    END IF;

ELSE 

    RAISE INVALID;
    
END IF;


EXCEPTION

    WHEN INVALID THEN 
        DBMS_OUTPUT.PUT_LINE('INVALID INPUT');
        
    WHEN SFULL THEN 
        DBMS_OUTPUT.PUT_LINE('STATION IS FULL PLEASE CHECK OTHER STATIONS OR CALL OUR CUSTOMER CARE');
        
    WHEN CHECK_INVALID THEN
        DBMS_OUTPUT.PUT_LINE('CHECK CONST VOILATED');

    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('INVALID INPUT');
        
END;
/


--------------------------------------------------------Grant permissions---------------------------------------------------------------------------------

   ---------------------------------------
---        GRANT PRIV TO DB_OWNER
---------------------------------------
    GRANT ALL ON CUSTOMER to DB_OWNER;
    GRANT ALL ON CUSTOMER_ADDRESS to DB_OWNER;
    GRANT ALL ON EMPLOYEE TO DB_OWNER;
    GRANT ALL ON BIKE to DB_OWNER;
    GRANT ALL ON STATION to DB_OWNER;
    GRANT ALL ON BIKE_AT_STATION to DB_OWNER;
    GRANT ALL ON MAINTENANCE to DB_OWNER;
    GRANT ALL ON RIDE_TRANSACTION to DB_OWNER;
    GRANT ALL ON CUSTOMER_FEEDBACK to DB_OWNER;
    GRANT ALL ON DISCOUNT to DB_OWNER;
    GRANT ALL ON PAYMENT to DB_OWNER;
    GRANT ALL ON OTP TO DB_OWNER;
    

---------------------------------------
---        GRANT PRIV TO DEVELOPER
---------------------------------------
    
    GRANT INSERT, UPDATE, DELETE, SELECT ON CUSTOMER to DEVELOPER;
    GRANT INSERT, UPDATE, DELETE, SELECT ON CUSTOMER_ADDRESS to DEVELOPER;
    GRANT INSERT, UPDATE, DELETE, SELECT ON BIKE to DEVELOPER;
    GRANT INSERT, UPDATE, DELETE, SELECT ON STATION to DEVELOPER;
    GRANT INSERT, UPDATE, DELETE, SELECT ON BIKE_AT_STATION to DEVELOPER;
    GRANT INSERT, UPDATE, DELETE, SELECT ON MAINTENANCE to DEVELOPER;
    GRANT INSERT, UPDATE, DELETE, SELECT ON RIDE_TRANSACTION to DEVELOPER;    
    GRANT INSERT, UPDATE, DELETE, SELECT ON CUSTOMER_FEEDBACK to DEVELOPER;
    GRANT INSERT, UPDATE, DELETE, SELECT ON DISCOUNT to DEVELOPER;
    GRANT INSERT, UPDATE, DELETE, SELECT ON PAYMENT to DEVELOPER;
    GRANT INSERT, UPDATE, DELETE, SELECT ON EMPLOYEE to DEVELOPER;
    GRANT INSERT, UPDATE, DELETE, SELECT ON OTP to DEVELOPER;

---------------------------------------
---         GRANT PRIV TO USER_TESTER
---------------------------------------
    
    GRANT SELECT, INSERT, UPDATE ON CUSTOMER to USER_TESTER;
    GRANT SELECT, INSERT, UPDATE ON CUSTOMER_ADDRESS to USER_TESTER;
    GRANT SELECT, INSERT, UPDATE ON CUSTOMER_FEEDBACK to USER_TESTER;
    GRANT SELECT                 ON DISCOUNT to USER_TESTER;
    GRANT SELECT, INSERT         ON PAYMENT to USER_TESTER;



---------------------------------------
---  GRANT PRIV TO ANALYST 
---------------------------------------
 

--- Only to VIEWS

---------------------------------------
---        GRANT PRIV TO QA
---------------------------------------
    
  
--- Only to VIEWS
---------------------------------------
---        GRANT PRIV TO MAINTENANCE
---------------------------------------
    
    
GRANT INSERT, UPDATE, DELETE, SELECT ON BIKE to MAINTENANCE;
GRANT INSERT, UPDATE, DELETE, SELECT ON MAINTENANCE to MAINTENANCE;
    
 ---------------------------------------
---        DATA INSERTION
---------------------------------------

-- CUSTOMER RECORDS
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1001, 'Lane', 'Hancock', 'M', 'l_hancock@northeastern.edu', 1046668389, 512180980, 'REGISTERED', '27-May-97'
);

/* INSERT QUERY NO: 2 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1002, 'Amaya', 'Kemp', 'F', 'kemp-amaya7556@northeastern.edu', 4608162164, 656709636, 'CASUAL', '4-Mar-02'
);

/* INSERT QUERY NO: 3 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1003, 'Kim', 'Fry', 'M', 'k.fry6167@northeastern.edu', 6669241976, 353254114, 'CASUAL', '21-Mar-90'
);

/* INSERT QUERY NO: 4 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1004, 'Maggie', 'Suarez', 'M', 'm_suarez8657@northeastern.edu', 1756179380, 347952361, 'REGISTERED', '14-May-04'
);

/* INSERT QUERY NO: 5 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1005, 'Benedict', 'Vincent', 'F', 'vbenedict988@northeastern.edu', 8821017797, 148733163, 'REGISTERED', '31-Mar-80'
);

/* INSERT QUERY NO: 6 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1006, 'Hanna', 'Manning', 'F', 'hanna_manning@northeastern.edu', 6857935814, 566648915, 'CASUAL', '8-Jul-94'
);

/* INSERT QUERY NO: 7 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1007, 'Aileen', 'Whitaker', 'M', 'a_whitaker6581@northeastern.edu', 7330882688, 228525602, 'REGISTERED', '1-Mar-09'
);

/* INSERT QUERY NO: 8 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1008, 'Roanna', 'Frank', 'M', 'r.frank@northeastern.edu', 5342368627, 159669759, 'REGISTERED', '13-Sep-85'
);

/* INSERT QUERY NO: 9 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1009, 'Callum', 'Mcguire', 'M', 'mcallum@northeastern.edu', 4835875931, 215173668, 'REGISTERED', '19-Aug-14'
);

/* INSERT QUERY NO: 10 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1010, 'Marvin', 'May', 'F', 'm_marvin6560@northeastern.edu', 2681408269, 549671420, 'REGISTERED', '24-Oct-03'
);

/* INSERT QUERY NO: 11 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1011, 'Derek', 'Hogan', 'M', 'd-hogan3967@northeastern.edu', 1431015079, 415701222, 'REGISTERED', '2-Nov-80'
);

/* INSERT QUERY NO: 12 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1012, 'Joshua', 'Rojas', 'M', 'j_rojas7922@northeastern.edu', 3547506852, 230643453, 'CASUAL', '9-Sep-86'
);

/* INSERT QUERY NO: 13 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1013, 'Erasmus', 'James', 'M', 'ejames@northeastern.edu', 5326364754, 299361955, 'CASUAL', '18-May-85'
);

/* INSERT QUERY NO: 14 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1014, 'Francis', 'Barton', 'F', 'f_barton665@northeastern.edu', 5422841665, 804153119, 'REGISTERED', '25-Mar-20'
);

/* INSERT QUERY NO: 15 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1015, 'Herman', 'Carver', 'F', 'hcarver575@northeastern.edu', 6888209391, 741234380, 'REGISTERED', '22-Jun-12'
);

/* INSERT QUERY NO: 16 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1016, 'Scarlet', 'Graham', 'M', 'grahamscarlet8520@northeastern.edu', 4692458516, 914912896, 'CASUAL', '6-Apr-00'
);

/* INSERT QUERY NO: 17 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1017, 'Brett', 'Mcintosh', 'M', 'brett_mcintosh2795@northeastern.edu', 2684926977, 340982757, 'REGISTERED', '20-Jan-96'
);

/* INSERT QUERY NO: 18 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1018, 'Colorado', 'Greene', 'F', 'greene_colorado6523@northeastern.edu', 8078565525, 310563147, 'CASUAL', '24-Sep-92'
);

/* INSERT QUERY NO: 19 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1019, 'Aurora', 'Marshall', 'F', 'aurora-marshall8116@northeastern.edu', 7263734142, 684294247, 'REGISTERED', '22-Jan-07'
);

/* INSERT QUERY NO: 20 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1020, 'Aurelia', 'Hayes', 'F', 'hayes_aurelia5156@northeastern.edu', 3373988183, 131569406, 'CASUAL', '22-Jun-08'
);

/* INSERT QUERY NO: 21 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1021, 'Alisa', 'Knowles', 'F', 'a.knowles981@northeastern.edu', 2233465228, 935142207, 'CASUAL', '28-Jan-84'
);

/* INSERT QUERY NO: 22 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1022, 'Megan', 'Watkins', 'F', 'mwatkins6406@northeastern.edu', 6155306191, 851310961, 'REGISTERED', '29-Sep-91'
);

/* INSERT QUERY NO: 23 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1023, 'Allistair', 'Haney', 'F', 'h.allistair@northeastern.edu', 5679074114, 959484147, 'CASUAL', '7-Apr-97'
);

/* INSERT QUERY NO: 24 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1024, 'Brooke', 'Stevens', 'F', 'stevensbrooke@northeastern.edu', 7857442498, 453780004, 'REGISTERED', '21-Jul-94'
);

/* INSERT QUERY NO: 25 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1025, 'Wendy', 'Mann', 'F', 'wendy-mann@northeastern.edu', 4052136966, 905797896, 'CASUAL', '20-Feb-03'
);

/* INSERT QUERY NO: 26 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1026, 'Dacey', 'Crosby', 'M', 'c-dacey4667@northeastern.edu', 6194255270, 445240769, 'REGISTERED', '19-Feb-99'
);

/* INSERT QUERY NO: 27 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1027, 'Gage', 'Carlson', 'M', 'g.carlson7874@northeastern.edu', 3059766915, 312695425, 'REGISTERED', '22-Mar-99'
);

/* INSERT QUERY NO: 28 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1028, 'Donna', 'Hart', 'M', 'dhart5108@northeastern.edu', 9427091459, 375020156, 'CASUAL', '10-Apr-19'
);

/* INSERT QUERY NO: 29 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1029, 'Malcolm', 'Mcdaniel', 'M', 'mcdaniel.malcolm7705@northeastern.edu', 5621325676, 493077015, 'CASUAL', '2-Nov-09'
);

/* INSERT QUERY NO: 30 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1030, 'Joan', 'Decker', 'F', 'j.decker1710@northeastern.edu', 4436569220, 837265744, 'CASUAL', '17-Aug-88'
);

/* INSERT QUERY NO: 31 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1031, 'Kiayada', 'Wilcox', 'M', 'wilcoxkiayada3831@northeastern.edu', 8020764227, 253175840, 'REGISTERED', '23-Jul-18'
);

/* INSERT QUERY NO: 32 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1032, 'Conan', 'Beck', 'F', 'b_conan8546@northeastern.edu', 9078592135, 851011106, 'REGISTERED', '3-Sep-01'
);

/* INSERT QUERY NO: 33 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1033, 'Rigel', 'Copeland', 'F', 'r_copeland@northeastern.edu', 1590595773, 922959550, 'REGISTERED', '8-May-06'
);

/* INSERT QUERY NO: 34 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1034, 'Charity', 'Boyer', 'F', 'b-charity1704@northeastern.edu', 5870077220, 576947618, 'REGISTERED', '24-Oct-81'
);

/* INSERT QUERY NO: 35 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1035, 'Steel', 'Gamble', 'F', 's-gamble8409@northeastern.edu', 6022093481, 304754333, 'CASUAL', '26-Oct-13'
);

/* INSERT QUERY NO: 36 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1036, 'Nita', 'Sargent', 'F', 'n.sargent@northeastern.edu', 9713619197, 925803012, 'REGISTERED', '26-May-10'
);

/* INSERT QUERY NO: 37 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1037, 'Brent', 'Long', 'F', 'brent.long@northeastern.edu', 7066025858, 453763880, 'CASUAL', '4-Apr-88'
);

/* INSERT QUERY NO: 38 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1038, 'Olympia', 'Wilson', 'F', 'o_wilson9960@northeastern.edu', 7324388534, 417081481, 'CASUAL', '30-Jan-84'
);

/* INSERT QUERY NO: 39 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1039, 'Jelani', 'Burton', 'F', 'b_jelani7204@northeastern.edu', 5949542463, 908334322, 'REGISTERED', '9-Aug-09'
);

/* INSERT QUERY NO: 40 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1040, 'Keaton', 'Ashley', 'M', 'keaton-ashley@northeastern.edu', 9840788477, 709504535, 'REGISTERED', '1-May-84'
);

/* INSERT QUERY NO: 41 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1041, 'Desiree', 'Conner', 'F', 'cdesiree@northeastern.edu', 6648397249, 796185720, 'REGISTERED', '19-May-99'
);

/* INSERT QUERY NO: 42 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1042, 'Bethany', 'Larson', 'M', 'larson.bethany3341@northeastern.edu', 6115183531, 916096163, 'REGISTERED', '27-Apr-13'
);

/* INSERT QUERY NO: 43 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1043, 'Ila', 'Wheeler', 'F', 'wheeler-ila@northeastern.edu', 3025949372, 587341739, 'CASUAL', '8-May-84'
);

/* INSERT QUERY NO: 44 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1044, 'Coby', 'Dean', 'M', 'dean_coby2409@northeastern.edu', 5399170028, 508368739, 'REGISTERED', '7-Jan-84'
);

/* INSERT QUERY NO: 45 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1045, 'Giselle', 'Yates', 'M', 'y_giselle7393@northeastern.edu', 9672286972, 610064210, 'REGISTERED', '30-Mar-87'
);

/* INSERT QUERY NO: 46 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1046, 'Judith', 'Kirk', 'F', 'kirk_judith1415@northeastern.edu', 1800079174, 665792164, 'REGISTERED', '14-Jul-88'
);

/* INSERT QUERY NO: 47 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1047, 'Keaton', 'Gilliam', 'M', 'gilliamkeaton5378@northeastern.edu', 2264264764, 854957054, 'REGISTERED', '4-Dec-06'
);

/* INSERT QUERY NO: 48 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1048, 'Burke', 'Carson', 'M', 'b.carson1395@northeastern.edu', 9687818057, 672673140, 'REGISTERED', '5-Jan-16'
);

/* INSERT QUERY NO: 49 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1049, 'Merrill', 'Barry', 'M', 'b_merrill5998@northeastern.edu', 8947169953, 993864117, 'REGISTERED', '30-Dec-96'
);

/* INSERT QUERY NO: 50 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1050, 'Zoe', 'Coleman', 'M', 'czoe@northeastern.edu', 9071980593, 783481973, 'REGISTERED', '4-Feb-93'
);

/* INSERT QUERY NO: 51 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1051, 'Sandra', 'Warner', 'F', 'w_sandra6496@northeastern.edu', 6674436668, 291981044, 'REGISTERED', '18-May-17'
);

/* INSERT QUERY NO: 52 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1052, 'Phillip', 'Mcgee', 'M', 'pmcgee7525@northeastern.edu', 9605579478, 483732643, 'REGISTERED', '19-Jul-90'
);

/* INSERT QUERY NO: 53 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1053, 'Gannon', 'George', 'F', 'george-gannon8755@northeastern.edu', 6384996134, 656032991, 'CASUAL', '18-Mar-85'
);

/* INSERT QUERY NO: 54 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1054, 'Tatiana', 'Navarro', 'F', 't.navarro3016@northeastern.edu', 3331699595, 185495963, 'CASUAL', '31-Jul-17'
);

/* INSERT QUERY NO: 55 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1055, 'Pearl', 'Reid', 'F', 'r-pearl175@northeastern.edu', 2702535939, 116454443, 'REGISTERED', '25-Dec-12'
);

/* INSERT QUERY NO: 56 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1056, 'Guy', 'Guerra', 'F', 'g_guerra2769@northeastern.edu', 2527559593, 518369212, 'REGISTERED', '26-Jan-92'
);

/* INSERT QUERY NO: 57 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1057, 'Jescie', 'Rogers', 'F', 'jrogers@northeastern.edu', 5067765700, 290532137, 'REGISTERED', '22-Mar-16'
);

/* INSERT QUERY NO: 58 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1058, 'Dustin', 'Freeman', 'M', 'd.freeman8299@northeastern.edu', 3980526701, 602843450, 'CASUAL', '18-May-91'
);

/* INSERT QUERY NO: 59 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1059, 'Deborah', 'Jefferson', 'M', 'jeffersondeborah@northeastern.edu', 3524092817, 125696261, 'CASUAL', '20-Nov-91'
);

/* INSERT QUERY NO: 60 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1060, 'Alice', 'Steele', 'M', 'a_steele@northeastern.edu', 5675348104, 513044794, 'CASUAL', '22-Dec-90'
);

/* INSERT QUERY NO: 61 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1061, 'Benjamin', 'Cherry', 'M', 'benjamincherry@northeastern.edu', 7060417198, 527978429, 'CASUAL', '27-Oct-00'
);

/* INSERT QUERY NO: 62 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1062, 'Clarke', 'Dunn', 'M', 'c_dunn@northeastern.edu', 5687728450, 912940927, 'REGISTERED', '25-Jan-10'
);

/* INSERT QUERY NO: 63 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1063, 'Ezra', 'Lucas', 'M', 'ezra_lucas@northeastern.edu', 7431277584, 943322350, 'REGISTERED', '15-Nov-14'
);

/* INSERT QUERY NO: 64 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1064, 'Galvin', 'Marsh', 'M', 'galvin-marsh@northeastern.edu', 3358199949, 588346079, 'REGISTERED', '6-Jan-17'
);

/* INSERT QUERY NO: 65 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1065, 'Damon', 'Strickland', 'M', 'damon_strickland7710@northeastern.edu', 1974483664, 212801566, 'REGISTERED', '6-Aug-87'
);

/* INSERT QUERY NO: 66 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1066, 'Zena', 'Tillman', 'F', 'ztillman@northeastern.edu', 8938221385, 326186387, 'REGISTERED', '6-Feb-04'
);

/* INSERT QUERY NO: 67 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1067, 'Ezra', 'Pearson', 'F', 'p_ezra5723@northeastern.edu', 3139434111, 323711563, 'CASUAL', '4-Sep-84'
);

/* INSERT QUERY NO: 68 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1068, 'Noelani', 'Daniels', 'M', 'daniels_noelani3068@northeastern.edu', 6141514815, 129600278, 'REGISTERED', '22-Apr-97'
);

/* INSERT QUERY NO: 69 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1069, 'Reese', 'Whitehead', 'F', 'reese.whitehead1982@northeastern.edu', 7843157160, 227857235, 'REGISTERED', '11-Dec-94'
);

/* INSERT QUERY NO: 70 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1070, 'Gavin', 'Huff', 'M', 'gavin-huff@northeastern.edu', 2122310433, 461830639, 'REGISTERED', '4-Feb-10'
);

/* INSERT QUERY NO: 71 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1071, 'Emerald', 'Robertson', 'M', 'robertson.emerald@northeastern.edu', 1606817327, 822181332, 'CASUAL', '23-May-21'
);

/* INSERT QUERY NO: 72 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1072, 'Alexa', 'Mclaughlin', 'M', 'a_mclaughlin@northeastern.edu', 2376096876, 913970965, 'REGISTERED', '16-Sep-87'
);

/* INSERT QUERY NO: 73 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1073, 'Nasim', 'Arnold', 'F', 'arnold-nasim7584@northeastern.edu', 4699733406, 913450865, 'CASUAL', '5-Sep-02'
);

/* INSERT QUERY NO: 74 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1074, 'Dominique', 'Murphy', 'M', 'd.murphy@northeastern.edu', 2134604733, 155731660, 'REGISTERED', '22-Sep-87'
);

/* INSERT QUERY NO: 75 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1075, 'Steel', 'Vaughn', 'M', 'v_steel3418@northeastern.edu', 4253536226, 226983575, 'REGISTERED', '17-Mar-15'
);

/* INSERT QUERY NO: 76 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1076, 'MacKenzie', 'Sellers', 'M', 'sellers-mackenzie@northeastern.edu', 5464645564, 940391775, 'CASUAL', '15-Apr-02'
);

/* INSERT QUERY NO: 77 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1077, 'Margaret', 'Williams', 'F', 'williamsmargaret9125@northeastern.edu', 8791438279, 366681771, 'CASUAL', '12-Dec-98'
);

/* INSERT QUERY NO: 78 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1078, 'Roary', 'Robbins', 'F', 'r_robbins@northeastern.edu', 9772819241, 516686218, 'REGISTERED', '29-Jan-92'
);

/* INSERT QUERY NO: 79 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1079, 'Kasimir', 'York', 'M', 'york-kasimir1406@northeastern.edu', 4142188194, 841339839, 'CASUAL', '28-Jun-92'
);

/* INSERT QUERY NO: 80 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1080, 'Elvis', 'Gay', 'F', 'g_elvis2946@northeastern.edu', 6982753373, 482021866, 'CASUAL', '15-Mar-99'
);

/* INSERT QUERY NO: 81 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1081, 'Noah', 'Justice', 'M', 'noah.justice6049@northeastern.edu', 4891386384, 515606983, 'REGISTERED', '26-Jan-08'
);

/* INSERT QUERY NO: 82 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1082, 'Cara', 'Torres', 'F', 'c.torres230@northeastern.edu', 2913134540, 650367810, 'CASUAL', '2-Apr-96'
);

/* INSERT QUERY NO: 83 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1083, 'Merritt', 'Dawson', 'M', 'm-dawson@northeastern.edu', 3310413914, 849796835, 'REGISTERED', '31-Mar-20'
);

/* INSERT QUERY NO: 84 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1084, 'Brianna', 'Wells', 'F', 'brianna.wells7979@northeastern.edu', 2711043688, 482610443, 'REGISTERED', '6-Dec-85'
);

/* INSERT QUERY NO: 85 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1085, 'Cullen', 'Baker', 'F', 'c-baker@northeastern.edu', 4833442790, 538911363, 'REGISTERED', '3-Jan-16'
);

/* INSERT QUERY NO: 86 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1086, 'Colby', 'Montgomery', 'F', 'c-montgomery2742@northeastern.edu', 1972198372, 996742054, 'REGISTERED', '12-Jul-92'
);

/* INSERT QUERY NO: 87 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1087, 'Catherine', 'Kane', 'F', 'catherine.kane3576@northeastern.edu', 6822594522, 375318249, 'REGISTERED', '7-Mar-81'
);

/* INSERT QUERY NO: 88 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1088, 'Audra', 'Cantu', 'F', 'cantu.audra5791@northeastern.edu', 2061396101, 792396796, 'CASUAL', '12-Jul-81'
);

/* INSERT QUERY NO: 89 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1089, 'Chava', 'Potts', 'F', 'c.potts2871@northeastern.edu', 4848221209, 834082673, 'CASUAL', '5-Jun-87'
);

/* INSERT QUERY NO: 90 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1090, 'Cadman', 'Petersen', 'F', 'c.petersen8951@northeastern.edu', 3061452984, 242800718, 'REGISTERED', '8-Jan-16'
);

/* INSERT QUERY NO: 91 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1091, 'Ian', 'Ewing', 'F', 'i.ewing@northeastern.edu', 7260379397, 857201567, 'CASUAL', '4-Oct-08'
);

/* INSERT QUERY NO: 92 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1092, 'Hayden', 'Cooley', 'F', 'h-cooley6730@northeastern.edu', 7152830209, 584000446, 'CASUAL', '6-Sep-95'
);

/* INSERT QUERY NO: 93 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1093, 'Jenette', 'Mcgee', 'M', 'j_mcgee@northeastern.edu', 7611125819, 457586264, 'REGISTERED', '9-May-89'
);

/* INSERT QUERY NO: 94 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1094, 'Yoshio', 'Elliott', 'F', 'e.yoshio4737@northeastern.edu', 7239683891, 274774703, 'CASUAL', '14-Jun-83'
);

/* INSERT QUERY NO: 95 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1095, 'Oscar', 'Foreman', 'F', 'foreman-oscar@northeastern.edu', 3190068284, 353500940, 'REGISTERED', '16-Aug-01'
);

/* INSERT QUERY NO: 96 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1096, 'Edan', 'Jones', 'M', 'e-jones@northeastern.edu', 6765456349, 647845079, 'CASUAL', '7-May-06'
);

/* INSERT QUERY NO: 97 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1097, 'Ivana', 'Burnett', 'F', 'i.burnett5226@northeastern.edu', 4180040419, 192482005, 'REGISTERED', '20-Oct-94'
);

/* INSERT QUERY NO: 98 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1098, 'Ora', 'Elliott', 'M', 'elliott_ora@northeastern.edu', 4083069549, 717548852, 'CASUAL', '18-May-81'
);

/* INSERT QUERY NO: 99 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1099, 'Colby', 'Rogers', 'F', 'c.rogers@northeastern.edu', 1706153476, 203743178, 'CASUAL', '19-Aug-12'
);

/* INSERT QUERY NO: 100 */
INSERT INTO CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, GENDER, EMAIL_ID, CONTACT, SSN_NUMBER, CUSTOMER_TYPE, DATE_OF_BIRTH)
VALUES
(
1100, 'Rhonda', 'Rhodes', 'M', 'rhonda_rhodes9614@northeastern.edu', 9008181765, 241845923, 'CASUAL', '29-Aug-81'
);


-- CUSTOMER ADDRESS
/* INSERT QUERY NO: 1 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3001, '6649 N BLUE GUM ST', 'GUM ST', 'BOSTON', 'MA', '02117', 'HOME', 1001
);

/* INSERT QUERY NO: 2 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3002, '4 B BLUE RIDGE BLVD', 'RIDGE BLVD', 'BOSTON', 'MA', '02116', 'HOME', 1002
);

/* INSERT QUERY NO: 3 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3003, '639 MAIN ST', 'MAIN ST', 'BOSTON', 'MA', '02119', 'HOME', 1003
);

/* INSERT QUERY NO: 4 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3004, '34 CENTER ST', 'CENTER ST', 'BOSTON', 'MA', '02115', 'HOME', 1004
);

/* INSERT QUERY NO: 5 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3005, '3 MCAULEY DR', 'MCAULEY DR', 'CAMBRIDGE', 'MA', '02138', 'HOME', 1005
);

/* INSERT QUERY NO: 6 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3006, '7 EADS ST', 'EADS ST', 'CAMBRIDGE', 'MA', '02139', 'HOME', 1006
);

/* INSERT QUERY NO: 7 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3007, '7 W JACKSON BLVD', 'JACKSON BLVD', 'CAMBRIDGE', 'MA', '02140', 'HOME', 1007
);

/* INSERT QUERY NO: 8 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3008, '2853 S CENTRAL EXPY', 'CENTRAL EXPY', 'CAMBRIDGE', 'MA', '02141', 'HOME', 1008
);

/* INSERT QUERY NO: 9 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3009, '74 W COLLEGE ST', 'COLLEGE ST', 'NEWTON', 'MA', '02459', 'HOME', 1009
);

/* INSERT QUERY NO: 10 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3010, '701 S HARRISON RD', 'HARRISON RD', 'NEWTON', 'MA', '02460', 'HOME', 1010
);

/* INSERT QUERY NO: 11 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3011, '1088 PINEHURST ST', 'PINEHURST ST', 'NEWTON', 'MA', '02461', 'HOME', 1011
);

/* INSERT QUERY NO: 12 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3012, '4 WEBBS CHAPEL RD', 'CHAPEL RD', 'NEWTON', 'MA', '02462', 'HOME', 1012
);

/* INSERT QUERY NO: 13 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3013, '524 LOUISIANA AVE NW', 'AVE NW', 'SOMERVILLE', 'MA', '02143', 'HOME', 1013
);

/* INSERT QUERY NO: 14 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3014, '185 BLACKSTONE BLDGE', 'BLACKSTONE BLDGE', 'SOMERVILLE', 'MA', '02144', 'HOME', 1014
);

/* INSERT QUERY NO: 15 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3015, '170 WYOMING AVE', 'WYOMING AVE', 'MALDEN', 'MA', '02148', 'HOME', 1015
);

/* INSERT QUERY NO: 16 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3016, '4 10TH ST W', 'ST W', 'EVERETT', 'MA', '02149', 'HOME', 1016
);

/* INSERT QUERY NO: 17 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3017, '7 W PINHOOK RD', 'PINHOOK RD', 'BOSTON', 'MA', '02117', 'HOME', 1017
);

/* INSERT QUERY NO: 18 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3018, '1 COMMERCE WAY', 'COMMERCE WAY', 'BOSTON', 'MA', '02116', 'HOME', 1018
);

/* INSERT QUERY NO: 19 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3019, '64 LAKEVIEW AVE', 'LAKEVIEW AVE', 'BOSTON', 'MA', '02119', 'HOME', 1019
);

/* INSERT QUERY NO: 20 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3020, '3 ASPEN ST', 'ASPEN ST', 'BOSTON', 'MA', '02115', 'HOME', 1020
);

/* INSERT QUERY NO: 21 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3021, '32860 SIERRA RD', 'SIERRA RD', 'CAMBRIDGE', 'MA', '02138', 'WORK', 1021
);

/* INSERT QUERY NO: 22 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3022, '703 BEVILLE RD', 'BEVILLE RD', 'CAMBRIDGE', 'MA', '02139', 'HOME', 1022
);

/* INSERT QUERY NO: 23 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3023, '5 HARRISON RD', 'HARRISON RD', 'CAMBRIDGE', 'MA', '02140', 'HOME', 1023
);

/* INSERT QUERY NO: 24 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3024, '73 SOUTHERN BLVD', 'SOUTHERN BLVD', 'CAMBRIDGE', 'MA', '02141', 'HOME', 1024
);

/* INSERT QUERY NO: 25 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3025, '189 VILLAGE PARK RD', 'PARK RD', 'NEWTON', 'MA', '02459', 'HOME', 1025
);

/* INSERT QUERY NO: 26 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3026, '5384 SOUTHWYCK BLVD', 'SOUTHWYCK BLVD', 'NEWTON', 'MA', '02460', 'HOME', 1026
);

/* INSERT QUERY NO: 27 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3027, '97 AIRPORT LOOP DR', 'LOOP DR', 'NEWTON', 'MA', '02461', 'WORK', 1027
);

/* INSERT QUERY NO: 28 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3028, '37855 NOLAN RD', 'NOLAN RD', 'NEWTON', 'MA', '02462', 'WORK', 1028
);

/* INSERT QUERY NO: 29 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3029, '1128 DELAWARE ST', 'DELAWARE ST', 'SOMERVILLE', 'MA', '02143', 'WORK', 1029
);

/* INSERT QUERY NO: 30 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3030, '577 PARADE ST', 'PARADE ST', 'SOMERVILLE', 'MA', '02144', 'WORK', 1030
);

/* INSERT QUERY NO: 31 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3031, '70 MECHANIC ST', 'MECHANIC ST', 'MALDEN', 'MA', '02148', 'WORK', 1031
);

/* INSERT QUERY NO: 32 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3032, '4379 HIGHWAY 116', 'HIGHWAY 116', 'EVERETT', 'MA', '02149', 'WORK', 1032
);

/* INSERT QUERY NO: 33 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3033, '55 HAWTHORNE BLVD', 'HAWTHORNE BLVD', 'BOSTON', 'MA', '02117', 'WORK', 1033
);

/* INSERT QUERY NO: 34 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3034, '7116 WESTERN AVE', 'WESTERN AVE', 'BOSTON', 'MA', '02116', 'HOME', 1034
);

/* INSERT QUERY NO: 35 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3035, '99586 MAIN ST', 'MAIN ST', 'BOSTON', 'MA', '02119', 'HOME', 1035
);

/* INSERT QUERY NO: 36 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3036, '8739 HUDSON ST', 'HUDSON ST', 'BOSTON', 'MA', '02115', 'HOME', 1036
);

/* INSERT QUERY NO: 37 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3037, '4441 POINT TERM MKT', 'TERM MKT', 'CAMBRIDGE', 'MA', '02138', 'HOME', 1037
);

/* INSERT QUERY NO: 38 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3038, '2972 LAFAYETTE AVE', 'LAFAYETTE AVE', 'CAMBRIDGE', 'MA', '02139', 'HOME', 1038
);

/* INSERT QUERY NO: 39 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3039, '2140 DIAMOND BLVD', 'DIAMOND BLVD', 'CAMBRIDGE', 'MA', '02140', 'HOME', 1039
);

/* INSERT QUERY NO: 40 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3040, '3989 PORTAGE TR', 'PORTAGE TR', 'CAMBRIDGE', 'MA', '02141', 'WORK', 1040
);

/* INSERT QUERY NO: 41 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3041, '1 MIDWAY RD', 'MIDWAY RD', 'NEWTON', 'MA', '02459', 'HOME', 1041
);

/* INSERT QUERY NO: 42 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3042, '77132 COON RAPIDS BLVD NW', 'BLVD NW', 'NEWTON', 'MA', '02460', 'HOME', 1042
);

/* INSERT QUERY NO: 43 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3043, '755 HARBOR WAY', 'HARBOR WAY', 'NEWTON', 'MA', '02461', 'HOME', 1043
);

/* INSERT QUERY NO: 44 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3044, '87 SIERRA RD', 'SIERRA RD', 'NEWTON', 'MA', '02462', 'HOME', 1044
);

/* INSERT QUERY NO: 45 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3045, '5 ELMWOOD PARK BLVD', 'PARK BLVD', 'SOMERVILLE', 'MA', '02143', 'HOME', 1045
);

/* INSERT QUERY NO: 46 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3046, '23 PALO ALTO SQ', 'ALTO SQ', 'SOMERVILLE', 'MA', '02144', 'WORK', 1046
);

/* INSERT QUERY NO: 47 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3047, '38062 E MAIN ST', 'MAIN ST', 'MALDEN', 'MA', '02148', 'HOME', 1047
);

/* INSERT QUERY NO: 48 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3048, '560 CIVIC CENTER DR', 'CENTER DR', 'EVERETT', 'MA', '02149', 'HOME', 1048
);

/* INSERT QUERY NO: 49 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3049, '3270 DEQUINDRE RD', 'DEQUINDRE RD', 'BOSTON', 'MA', '02117', 'HOME', 1049
);

/* INSERT QUERY NO: 50 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3050, '9122 CARPENTER AVE', 'CARPENTER AVE', 'BOSTON', 'MA', '02116', 'HOME', 1050
);

/* INSERT QUERY NO: 51 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3051, '48 LENOX ST', 'LENOX ST', 'BOSTON', 'MA', '02119', 'HOME', 1051
);

/* INSERT QUERY NO: 52 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3052, '5 LITTLE RIVER TPKE', 'RIVER TPKE', 'BOSTON', 'MA', '02115', 'WORK', 1052
);

/* INSERT QUERY NO: 53 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3053, '3 N GROESBECK HWY', 'GROESBECK HWY', 'CAMBRIDGE', 'MA', '02138', 'HOME', 1053
);

/* INSERT QUERY NO: 54 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3054, '96263 GREENWOOD PL', 'GREENWOOD PL', 'CAMBRIDGE', 'MA', '02139', 'HOME', 1054
);

/* INSERT QUERY NO: 55 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3055, '8 MCARTHUR LN', 'MCARTHUR LN', 'CAMBRIDGE', 'MA', '02140', 'HOME', 1055
);

/* INSERT QUERY NO: 56 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3056, '8 FAIR LAWN AVE', 'LAWN AVE', 'CAMBRIDGE', 'MA', '02141', 'HOME', 1056
);

/* INSERT QUERY NO: 57 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3057, '9 N 14TH ST', 'N 14TH ST', 'NEWTON', 'MA', '02459', 'WORK', 1057
);

/* INSERT QUERY NO: 58 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3058, '9 VANOWEN ST', 'VANOWEN ST', 'NEWTON', 'MA', '02460', 'HOME', 1058
);

/* INSERT QUERY NO: 59 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3059, '18 WATERLOO GENEVA RD', 'GENEVA RD', 'NEWTON', 'MA', '02461', 'HOME', 1059
);

/* INSERT QUERY NO: 60 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3060, '506 S HACIENDA DR', 'HACIENDA DR', 'NEWTON', 'MA', '02462', 'HOME', 1060
);

/* INSERT QUERY NO: 61 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3061, '3732 SHERMAN AVE', 'SHERMAN AVE', 'SOMERVILLE', 'MA', '02143', 'HOME', 1061
);

/* INSERT QUERY NO: 62 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3062, '25657 LIVE OAK ST', 'OAK ST', 'SOMERVILLE', 'MA', '02144', 'HOME', 1062
);

/* INSERT QUERY NO: 63 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3063, '4923 CAREY AVE', 'CAREY AVE', 'MALDEN', 'MA', '02148', 'HOME', 1063
);

/* INSERT QUERY NO: 64 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3064, '3196 S RIDER TRL', 'RIDER TRL', 'EVERETT', 'MA', '02149', 'HOME', 1064
);

/* INSERT QUERY NO: 65 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3065, '87393 E HIGHLAND RD', 'HIGHLAND RD', 'BOSTON', 'MA', '02117', 'WORK', 1065
);

/* INSERT QUERY NO: 66 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3066, '67 E CHESTNUT HILL RD', 'HILL RD', 'BOSTON', 'MA', '02116', 'HOME', 1066
);

/* INSERT QUERY NO: 67 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3067, '6882 TORRESDALE AVE', 'TORRESDALE AVE', 'BOSTON', 'MA', '02119', 'HOME', 1067
);

/* INSERT QUERY NO: 68 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3068, '985 E 6TH AVE', 'E 6TH AVE', 'BOSTON', 'MA', '02115', 'HOME', 1068
);

/* INSERT QUERY NO: 69 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3069, '26659 N 13TH ST', 'N 13TH ST', 'CAMBRIDGE', 'MA', '02138', 'HOME', 1069
);

/* INSERT QUERY NO: 70 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3070, '759 ELDORA ST', 'ELDORA ST', 'CAMBRIDGE', 'MA', '02139', 'HOME', 1070
);

/* INSERT QUERY NO: 71 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3071, '944 GAITHER DR', 'GAITHER DR', 'CAMBRIDGE', 'MA', '02140', 'HOME', 1071
);

/* INSERT QUERY NO: 72 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3072, '66552 MALONE RD', 'MALONE RD', 'CAMBRIDGE', 'MA', '02141', 'WORK', 1072
);

/* INSERT QUERY NO: 73 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3073, '25346 NEW RD', 'NEW RD', 'NEWTON', 'MA', '02459', 'WORK', 1073
);

/* INSERT QUERY NO: 74 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3074, '60 FILLMORE AVE', 'FILLMORE AVE', 'NEWTON', 'MA', '02460', 'WORK', 1074
);

/* INSERT QUERY NO: 75 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3075, '6535 JOYCE ST', 'JOYCE ST', 'NEWTON', 'MA', '02461', 'WORK', 1075
);

/* INSERT QUERY NO: 76 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3076, '78112 MORRIS AVE', 'MORRIS AVE', 'NEWTON', 'MA', '02462', 'HOME', 1076
);

/* INSERT QUERY NO: 77 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3077, '96950 HIDDEN LN', 'HIDDEN LN', 'SOMERVILLE', 'MA', '02143', 'WORK', 1077
);

/* INSERT QUERY NO: 78 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3078, '3718 S MAIN ST', 'MAIN ST', 'SOMERVILLE', 'MA', '02144', 'HOME', 1078
);

/* INSERT QUERY NO: 79 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3079, '9677 COMMERCE DR', 'COMMERCE DR', 'MALDEN', 'MA', '02148', 'HOME', 1079
);

/* INSERT QUERY NO: 80 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3080, '1950 5TH AVE', 'TH AVE', 'EVERETT', 'MA', '02149', 'HOME', 1080
);

/* INSERT QUERY NO: 81 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3081, '61304 N FRENCH RD', 'FRENCH RD', 'BOSTON', 'MA', '02117', 'HOME', 1081
);

/* INSERT QUERY NO: 82 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3082, '94 W DODGE RD', 'DODGE RD', 'BOSTON', 'MA', '02116', 'WORK', 1082
);

/* INSERT QUERY NO: 83 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3083, '5221 BEAR VALLEY RD', 'VALLEY RD', 'BOSTON', 'MA', '02119', 'HOME', 1083
);

/* INSERT QUERY NO: 84 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3084, '9648 S MAIN', 'S MAIN', 'BOSTON', 'MA', '02115', 'HOME', 1084
);

/* INSERT QUERY NO: 85 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3085, '7 S SAN MARCOS RD', 'MARCOS RD', 'CAMBRIDGE', 'MA', '02138', 'HOME', 1085
);

/* INSERT QUERY NO: 86 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3086, '812 S HAVEN ST', 'HAVEN ST', 'CAMBRIDGE', 'MA', '02139', 'WORK', 1086
);

/* INSERT QUERY NO: 87 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3087, '4 E COLONIAL DR', 'COLONIAL DR', 'CAMBRIDGE', 'MA', '02140', 'WORK', 1087
);

/* INSERT QUERY NO: 88 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3088, '9 WAYDELL ST', 'WAYDELL ST', 'CAMBRIDGE', 'MA', '02141', 'WORK', 1088
);

/* INSERT QUERY NO: 89 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3089, '43 HUEY P LONG AVE', 'LONG AVE', 'NEWTON', 'MA', '02459', 'WORK', 1089
);

/* INSERT QUERY NO: 90 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3090, '22 BRIDLE LN', 'BRIDLE LN', 'NEWTON', 'MA', '02460', 'HOME', 1090
);

/* INSERT QUERY NO: 91 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3091, '70099 E NORTH AVE', 'NORTH AVE', 'NEWTON', 'MA', '02461', 'HOME', 1091
);

/* INSERT QUERY NO: 92 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3092, '3211 E NORTHEAST LOOP', 'NORTHEAST LOOP', 'NEWTON', 'MA', '02462', 'HOME', 1092
);

/* INSERT QUERY NO: 93 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3093, '26 MONTGOMERY ST', 'MONTGOMERY ST', 'SOMERVILLE', 'MA', '02143', 'WORK', 1093
);

/* INSERT QUERY NO: 94 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3094, '13252 LIGHTHOUSE AVE', 'LIGHTHOUSE AVE', 'SOMERVILLE', 'MA', '02144', 'HOME', 1094
);

/* INSERT QUERY NO: 95 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3095, '96541 W CENTRAL BLVD', 'CENTRAL BLVD', 'MALDEN', 'MA', '02148', 'HOME', 1095
);

/* INSERT QUERY NO: 96 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3096, '47857 CONEY ISLAND AVE', 'ISLAND AVE', 'EVERETT', 'MA', '02149', 'HOME', 1096
);

/* INSERT QUERY NO: 97 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3097, '8573 LINCOLN BLVD', 'LINCOLN BLVD', 'BOSTON', 'MA', '02117', 'HOME', 1097
);

/* INSERT QUERY NO: 98 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3098, '3829 VENTURA BLVD', 'VENTURA BLVD', 'EVERETT', 'MA', '02149', 'HOME', 1098
);

/* INSERT QUERY NO: 99 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3099, '13 S HACIENDA DR', 'HACIENDA DR', 'SOMERVILLE', 'MA', '02143', 'WORK', 1099
);

/* INSERT QUERY NO: 100 */
INSERT INTO CUSTOMER_ADDRESS(ADDRESS_ID, LINE_1, LINE_2, CITY, STATE, ZIPCODE, TYPE, CUSTOMER_ID)
VALUES
(
3100, '33 STATE ST', 'STATE ST', 'NEWTON', 'MA', '02459', 'WORK', 1100
);

--- BIKE TABLE 


/* INSERT QUERY NO: 1 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
1, 'ACTIVE', '31-Dec-20', 1000, 0
);

/* INSERT QUERY NO: 2 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
2, 'ACTIVE', '31-Dec-20', 1001, 0
);

/* INSERT QUERY NO: 3 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
3, 'ACTIVE', '31-Dec-20', 1002, 0
);

/* INSERT QUERY NO: 4 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
4, 'INACTIVE', '31-Dec-20', 1003, 0
);

/* INSERT QUERY NO: 5 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
5, 'ACTIVE', '31-Dec-20', 1004, 0
);

/* INSERT QUERY NO: 6 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
6, 'ACTIVE', '31-Dec-20', 1005, 0
);

/* INSERT QUERY NO: 7 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
7, 'ACTIVE', '31-Dec-20', 1006, 0
);

/* INSERT QUERY NO: 8 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
8, 'ACTIVE', '31-Dec-20', 1007, 0
);

/* INSERT QUERY NO: 9 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
9, 'ACTIVE', '31-Dec-20', 1008, 0
);

/* INSERT QUERY NO: 10 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
10, 'INACTIVE', '31-Dec-20', 1009, 0
);

/* INSERT QUERY NO: 11 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
11, 'ACTIVE', '31-Dec-20', 1010, 0
);

/* INSERT QUERY NO: 12 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
12, 'ACTIVE', '31-Dec-20', 1011, 0
);

/* INSERT QUERY NO: 13 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
13, 'ACTIVE', '31-Dec-20', 1012, 0
);

/* INSERT QUERY NO: 14 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
14, 'ACTIVE', '31-Dec-20', 1013, 0
);

/* INSERT QUERY NO: 15 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
15, 'INACTIVE', '31-Dec-20', 1014, 0
);

/* INSERT QUERY NO: 16 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
16, 'ACTIVE', '31-Dec-20', 1015, 0
);

/* INSERT QUERY NO: 17 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
17, 'ACTIVE', '31-Dec-20', 1016, 0
);

/* INSERT QUERY NO: 18 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
18, 'ACTIVE', '31-Dec-20', 1017, 0
);

/* INSERT QUERY NO: 19 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
19, 'ACTIVE', '31-Dec-20', 1018, 0
);

/* INSERT QUERY NO: 20 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
20, 'ACTIVE', '31-Dec-20', 1019, 0
);

/* INSERT QUERY NO: 21 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
21, 'ACTIVE', '31-Dec-20', 1020, 0
);

/* INSERT QUERY NO: 22 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
22, 'INACTIVE', '31-Dec-20', 1021, 0
);

/* INSERT QUERY NO: 23 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
23, 'ACTIVE', '31-Dec-20', 1022, 0
);

/* INSERT QUERY NO: 24 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
24, 'ACTIVE', '31-Dec-20', 1023, 0
);

/* INSERT QUERY NO: 25 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
25, 'ACTIVE', '31-Dec-20', 1024, 0
);

/* INSERT QUERY NO: 26 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
26, 'ACTIVE', '31-Dec-20', 1025, 0
);

/* INSERT QUERY NO: 27 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
27, 'ACTIVE', '31-Dec-20', 1026, 0
);

/* INSERT QUERY NO: 28 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
28, 'ACTIVE', '31-Dec-20', 1027, 0
);

/* INSERT QUERY NO: 29 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
29, 'INACTIVE', '31-Dec-20', 1028, 0
);

/* INSERT QUERY NO: 30 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
30, 'ACTIVE', '31-Dec-20', 1029, 0
);

/* INSERT QUERY NO: 31 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
31, 'ACTIVE', '31-Dec-20', 1030, 0
);

/* INSERT QUERY NO: 32 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
32, 'ACTIVE', '31-Dec-20', 1031, 0
);

/* INSERT QUERY NO: 33 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
33, 'ACTIVE', '31-Dec-20', 1032, 0
);

/* INSERT QUERY NO: 34 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
34, 'INACTIVE', '31-Dec-20', 1033, 0
);

/* INSERT QUERY NO: 35 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
35, 'ACTIVE', '31-Dec-20', 1034, 0
);

/* INSERT QUERY NO: 36 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
36, 'ACTIVE', '31-Dec-20', 1035, 0
);

/* INSERT QUERY NO: 37 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
37, 'ACTIVE', '31-Dec-20', 1036, 0
);

/* INSERT QUERY NO: 38 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
38, 'ACTIVE', '31-Dec-20', 1037, 0
);

/* INSERT QUERY NO: 39 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
39, 'ACTIVE', '31-Dec-20', 1038, 0
);

/* INSERT QUERY NO: 40 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
40, 'ACTIVE', '31-Dec-20', 1039, 0
);

/* INSERT QUERY NO: 41 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
41, 'INACTIVE', '31-Dec-20', 1040, 0
);

/* INSERT QUERY NO: 42 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
42, 'ACTIVE', '31-Dec-20', 1041, 0
);

/* INSERT QUERY NO: 43 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
43, 'ACTIVE', '31-Dec-20', 1042, 0
);

/* INSERT QUERY NO: 44 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
44, 'ACTIVE', '31-Dec-20', 1043, 0
);

/* INSERT QUERY NO: 45 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
45, 'ACTIVE', '31-Dec-20', 1044, 0
);

/* INSERT QUERY NO: 46 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
46, 'INACTIVE', '31-Dec-20', 1045, 0
);

/* INSERT QUERY NO: 47 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
47, 'ACTIVE', '31-Dec-20', 1046, 0
);

/* INSERT QUERY NO: 48 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
48, 'ACTIVE', '31-Dec-20', 1047, 0
);

/* INSERT QUERY NO: 49 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
49, 'ACTIVE', '31-Dec-20', 1048, 0
);

/* INSERT QUERY NO: 50 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
50, 'ACTIVE', '31-Dec-20', 1049, 0
);

/* INSERT QUERY NO: 51 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
51, 'ACTIVE', '31-Dec-20', 1050, 0
);

/* INSERT QUERY NO: 52 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
52, 'INACTIVE', '31-Dec-20', 1051, 0
);

/* INSERT QUERY NO: 53 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
53, 'ACTIVE', '31-Dec-20', 1052, 0
);

/* INSERT QUERY NO: 54 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
54, 'ACTIVE', '31-Dec-20', 1053, 0
);

/* INSERT QUERY NO: 55 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
55, 'ACTIVE', '31-Dec-20', 1054, 0
);

/* INSERT QUERY NO: 56 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
56, 'ACTIVE', '31-Dec-20', 1055, 0
);

/* INSERT QUERY NO: 57 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
57, 'INACTIVE', '31-Dec-20', 1056, 0
);

/* INSERT QUERY NO: 58 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
58, 'ACTIVE', '31-Dec-20', 1057, 0
);

/* INSERT QUERY NO: 59 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
59, 'ACTIVE', '31-Dec-20', 1058, 0
);

/* INSERT QUERY NO: 60 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
60, 'ACTIVE', '31-Dec-20', 1059, 0
);

/* INSERT QUERY NO: 61 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
61, 'ACTIVE', '31-Dec-20', 1060, 0
);

/* INSERT QUERY NO: 62 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
62, 'ACTIVE', '31-Dec-20', 1061, 0
);

/* INSERT QUERY NO: 63 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
63, 'INACTIVE', '31-Dec-20', 1062, 0
);

/* INSERT QUERY NO: 64 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
64, 'ACTIVE', '31-Dec-20', 1063, 0
);

/* INSERT QUERY NO: 65 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
65, 'ACTIVE', '31-Dec-20', 1064, 0
);

/* INSERT QUERY NO: 66 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
66, 'ACTIVE', '31-Dec-20', 1065, 0
);

/* INSERT QUERY NO: 67 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
67, 'ACTIVE', '31-Dec-20', 1066, 0
);

/* INSERT QUERY NO: 68 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
68, 'INACTIVE', '31-Dec-20', 1067, 0
);

/* INSERT QUERY NO: 69 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
69, 'ACTIVE', '31-Dec-20', 1068, 0
);

/* INSERT QUERY NO: 70 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
70, 'ACTIVE', '31-Dec-20', 1069, 0
);

/* INSERT QUERY NO: 71 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
71, 'ACTIVE', '31-Dec-20', 1070, 0
);

/* INSERT QUERY NO: 72 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
72, 'ACTIVE', '31-Dec-20', 1071, 0
);

/* INSERT QUERY NO: 73 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
73, 'ACTIVE', '31-Dec-20', 1072, 0
);

/* INSERT QUERY NO: 74 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
74, 'ACTIVE', '31-Dec-20', 1073, 0
);

/* INSERT QUERY NO: 75 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
75, 'ACTIVE', '31-Dec-20', 1074, 0
);

/* INSERT QUERY NO: 76 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
76, 'ACTIVE', '31-Dec-20', 1075, 0
);

/* INSERT QUERY NO: 77 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
77, 'ACTIVE', '31-Dec-20', 1076, 0
);

/* INSERT QUERY NO: 78 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
78, 'ACTIVE', '31-Dec-20', 1077, 0
);

/* INSERT QUERY NO: 79 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
79, 'INACTIVE', '31-Dec-20', 1078, 0
);

/* INSERT QUERY NO: 80 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
80, 'ACTIVE', '31-Dec-20', 1079, 0
);

/* INSERT QUERY NO: 81 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
81, 'ACTIVE', '31-Dec-20', 1080, 0
);

/* INSERT QUERY NO: 82 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
82, 'ACTIVE', '31-Dec-20', 1081, 0
);

/* INSERT QUERY NO: 83 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
83, 'ACTIVE', '31-Dec-20', 1082, 0
);

/* INSERT QUERY NO: 84 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
84, 'ACTIVE', '31-Dec-20', 1083, 0
);

/* INSERT QUERY NO: 85 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
85, 'INACTIVE', '31-Dec-20', 1084, 0
);

/* INSERT QUERY NO: 86 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
86, 'ACTIVE', '31-Dec-20', 1085, 0
);

/* INSERT QUERY NO: 87 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
87, 'ACTIVE', '31-Dec-20', 1086, 0
);

/* INSERT QUERY NO: 88 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
88, 'ACTIVE', '31-Dec-20', 1087, 0
);

/* INSERT QUERY NO: 89 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
89, 'ACTIVE', '31-Dec-20', 1088, 0
);

/* INSERT QUERY NO: 90 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
90, 'INACTIVE', '31-Dec-20', 1089, 0
);

/* INSERT QUERY NO: 91 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
91, 'ACTIVE', '31-Dec-20', 1090, 0
);

/* INSERT QUERY NO: 92 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
92, 'ACTIVE', '31-Dec-20', 1091, 0
);

/* INSERT QUERY NO: 93 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
93, 'ACTIVE', '31-Dec-20', 1092, 0
);

/* INSERT QUERY NO: 94 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
94, 'ACTIVE', '31-Dec-20', 1093, 0
);

/* INSERT QUERY NO: 95 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
95, 'ACTIVE', '31-Dec-20', 1094, 0
);

/* INSERT QUERY NO: 96 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
96, 'ACTIVE', '31-Dec-20', 1095, 0
);

/* INSERT QUERY NO: 97 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
97, 'INACTIVE', '31-Dec-20', 1096, 0
);

/* INSERT QUERY NO: 98 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
98, 'ACTIVE', '31-Dec-20', 1097, 0
);

/* INSERT QUERY NO: 99 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
99, 'ACTIVE', '31-Dec-20', 1098, 0
);

/* INSERT QUERY NO: 100 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
100, 'ACTIVE', '31-Dec-20', 1099, 0
);

/* INSERT QUERY NO: 101 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
101, 'ACTIVE', '31-Dec-20', 1100, 0
);

/* INSERT QUERY NO: 102 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
102, 'ACTIVE', '31-Dec-20', 1101, 0
);

/* INSERT QUERY NO: 103 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
103, 'ACTIVE', '31-Dec-20', 1102, 0
);

/* INSERT QUERY NO: 104 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
104, 'INACTIVE', '31-Dec-20', 1103, 0
);

/* INSERT QUERY NO: 105 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
105, 'ACTIVE', '31-Dec-20', 1104, 0
);

/* INSERT QUERY NO: 106 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
106, 'ACTIVE', '31-Dec-20', 1105, 0
);

/* INSERT QUERY NO: 107 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
107, 'ACTIVE', '31-Dec-20', 1106, 0
);

/* INSERT QUERY NO: 108 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
108, 'ACTIVE', '31-Dec-20', 1107, 0
);

/* INSERT QUERY NO: 109 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
109, 'INACTIVE', '31-Dec-20', 1108, 0
);

/* INSERT QUERY NO: 110 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
110, 'ACTIVE', '31-Dec-20', 1109, 0
);

/* INSERT QUERY NO: 111 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
111, 'ACTIVE', '31-Dec-20', 1110, 0
);

/* INSERT QUERY NO: 112 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
112, 'ACTIVE', '31-Dec-20', 1111, 0
);

/* INSERT QUERY NO: 113 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
113, 'ACTIVE', '31-Dec-20', 1112, 0
);

/* INSERT QUERY NO: 114 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
114, 'ACTIVE', '31-Dec-20', 1113, 0
);

/* INSERT QUERY NO: 115 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
115, 'ACTIVE', '31-Dec-20', 1114, 0
);

/* INSERT QUERY NO: 116 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
116, 'INACTIVE', '31-Dec-20', 1115, 0
);

/* INSERT QUERY NO: 117 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
117, 'ACTIVE', '31-Dec-20', 1116, 0
);

/* INSERT QUERY NO: 118 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
118, 'ACTIVE', '31-Dec-20', 1117, 0
);

/* INSERT QUERY NO: 119 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
119, 'ACTIVE', '31-Dec-20', 1118, 0
);

/* INSERT QUERY NO: 120 */
INSERT INTO BIKE(BIKE_ID, STATUS, COMMISSION_DATE, BIKE_NO, TOTAL_DISTANCE)
VALUES
(
120, 'ACTIVE', '31-Dec-20', 1119, 0
);


--- STATION


/* INSERT QUERY NO: 1 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9000, '02117', 'MA', 'BOSTON', 'DOWNTOWN BOSTON', 10
);

/* INSERT QUERY NO: 2 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9001, '02116', 'MA', 'BOSTON', 'BACK BAY', 15
);

/* INSERT QUERY NO: 3 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9002, '02119', 'MA', 'BOSTON', 'ROXBURY', 5
);

/* INSERT QUERY NO: 4 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9003, '02115', 'MA', 'BOSTON', 'LONGWOOD', 5
);

/* INSERT QUERY NO: 5 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9004, '02138', 'MA', 'CAMBRIDGE', 'HARVARD SQUARE', 5
);

/* INSERT QUERY NO: 6 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9005, '02139', 'MA', 'CAMBRIDGE', 'INMAN SQUARE', 10
);

/* INSERT QUERY NO: 7 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9006, '02140', 'MA', 'CAMBRIDGE', 'PORTER SQUARE', 10
);

/* INSERT QUERY NO: 8 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9007, '02141', 'MA', 'CAMBRIDGE', 'LECHMERE', 15
);

/* INSERT QUERY NO: 9 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9008, '02459', 'MA', 'NEWTON', 'NEWTON CENTER', 10
);

/* INSERT QUERY NO: 10 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9009, '02460', 'MA', 'NEWTON', 'NEWTONVILLE', 5
);

/* INSERT QUERY NO: 11 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9010, '02461', 'MA', 'NEWTON', 'NEWTON HIGHLANDS', 10
);

/* INSERT QUERY NO: 12 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9011, '02462', 'MA', 'NEWTON', 'NEWTON LOWER FALLS', 15
);

/* INSERT QUERY NO: 13 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9012, '02143', 'MA', 'SOMERVILLE', 'THE MUSEUM', 10
);

/* INSERT QUERY NO: 14 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9013, '02144', 'MA', 'SOMERVILLE', 'DAVIS SQUARE', 5
);

/* INSERT QUERY NO: 15 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9014, '02148', 'MA', 'MALDEN', 'MEDFORD', 10
);

/* INSERT QUERY NO: 16 */
INSERT INTO STATION(STATION_ID, ZIPCODE, STATE, CITY, NAME, CAPACITYS)
VALUES
(
9015, '02149', 'MA', 'EVERETT', 'EVERETT HIGH SCHOOL', 10
);

---- BIKE AT STATION

/* INSERT QUERY NO: 1 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
501, 1, 9000
);

/* INSERT QUERY NO: 2 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
502, 2, 9001
);

/* INSERT QUERY NO: 3 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
503, 3, 9001
);

/* INSERT QUERY NO: 4 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
504, 4, 9000
);

/* INSERT QUERY NO: 5 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
505, 5, 9002
);

/* INSERT QUERY NO: 6 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
506, 6, 9002
);

/* INSERT QUERY NO: 7 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
507, 7, 9001
);

/* INSERT QUERY NO: 8 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
508, 8, 9001
);

/* INSERT QUERY NO: 9 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
509, 9, 9001
);

/* INSERT QUERY NO: 10 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
510, 10, 9006
);

/* INSERT QUERY NO: 11 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
511, 11, 9006
);

/* INSERT QUERY NO: 12 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
512, 12, 9000
);

/* INSERT QUERY NO: 13 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
513, 13, 9008
);

/* INSERT QUERY NO: 14 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
514, 14, 9011
);

/* INSERT QUERY NO: 15 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
515, 15, 9011
);

/* INSERT QUERY NO: 16 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
516, 16, 9008
);

/* INSERT QUERY NO: 17 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
517, 17, 9002
);

/* INSERT QUERY NO: 18 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
518, 18, 9011
);

/* INSERT QUERY NO: 19 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
519, 19, 9008
);

/* INSERT QUERY NO: 20 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
520, 20, 9001
);

/* INSERT QUERY NO: 21 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
521, 21, 9001
);

/* INSERT QUERY NO: 22 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
522, 22, 9001
);

/* INSERT QUERY NO: 23 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
523, 23, 9011
);

/* INSERT QUERY NO: 24 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
524, 24, 9011
);

/* INSERT QUERY NO: 25 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
525, 25, 9006
);

/* INSERT QUERY NO: 26 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
526, 26, 9006
);

/* INSERT QUERY NO: 27 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
527, 27, 9000
);

/* INSERT QUERY NO: 28 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
528, 28, 9007
);

/* INSERT QUERY NO: 29 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
529, 29, 9007
);

/* INSERT QUERY NO: 30 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
530, 30, 9007
);

/* INSERT QUERY NO: 31 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
531, 31, 9011
);

/* INSERT QUERY NO: 32 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
532, 32, 9011
);

/* INSERT QUERY NO: 33 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
533, 33, 9006
);

/* INSERT QUERY NO: 34 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
534, 34, 9006
);

/* INSERT QUERY NO: 35 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
535, 35, 9011
);

/* INSERT QUERY NO: 36 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
536, 36, 9011
);

/* INSERT QUERY NO: 37 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
537, 37, 9000
);

/* INSERT QUERY NO: 38 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
538, 38, 9011
);

/* INSERT QUERY NO: 39 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
539, 39, 9011
);

/* INSERT QUERY NO: 40 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
540, 40, 9001
);

/* INSERT QUERY NO: 41 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
541, 41, 9001
);

/* INSERT QUERY NO: 42 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
542, 42, 9001
);

/* INSERT QUERY NO: 43 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
543, 43, 9008
);

/* INSERT QUERY NO: 44 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
544, 44, 9011
);

/* INSERT QUERY NO: 45 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
545, 45, 9012
);

/* INSERT QUERY NO: 46 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
546, 46, 9000
);

/* INSERT QUERY NO: 47 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
547, 47, 9012
);

/* INSERT QUERY NO: 48 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
548, 48, 9012
);

/* INSERT QUERY NO: 49 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
549, 49, 9005
);

/* INSERT QUERY NO: 50 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
550, 50, 9005
);

/* INSERT QUERY NO: 51 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
551, 51, 9010
);

/* INSERT QUERY NO: 52 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
552, 52, 9008
);

/* INSERT QUERY NO: 53 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
553, 53, 9012
);

/* INSERT QUERY NO: 54 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
554, 54, 9012
);

/* INSERT QUERY NO: 55 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
555, 55, 9000
);

/* INSERT QUERY NO: 56 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
556, 56, 9012
);

/* INSERT QUERY NO: 57 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
557, 57, 9005
);

/* INSERT QUERY NO: 58 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
558, 58, 9005
);

/* INSERT QUERY NO: 59 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
559, 59, 9005
);

/* INSERT QUERY NO: 60 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
560, 60, 9007
);

/* INSERT QUERY NO: 61 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
561, 61, 9007
);

/* INSERT QUERY NO: 62 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
562, 62, 9007
);

/* INSERT QUERY NO: 63 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
563, 63, 9012
);

/* INSERT QUERY NO: 64 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
564, 64, 9000
);

/* INSERT QUERY NO: 65 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
565, 65, 9010
);

/* INSERT QUERY NO: 66 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
566, 66, 9012
);

/* INSERT QUERY NO: 67 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
567, 67, 9006
);

/* INSERT QUERY NO: 68 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
568, 68, 9006
);

/* INSERT QUERY NO: 69 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
569, 69, 9013
);

/* INSERT QUERY NO: 70 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
570, 70, 9007
);

/* INSERT QUERY NO: 71 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
571, 71, 9007
);

/* INSERT QUERY NO: 72 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
572, 72, 9007
);

/* INSERT QUERY NO: 73 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
573, 73, 9013
);

/* INSERT QUERY NO: 74 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
574, 74, 9001
);

/* INSERT QUERY NO: 75 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
575, 75, 9013
);

/* INSERT QUERY NO: 76 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
576, 76, 9009
);

/* INSERT QUERY NO: 77 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
577, 77, 9013
);

/* INSERT QUERY NO: 78 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
578, 78, 9005
);

/* INSERT QUERY NO: 79 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
579, 79, 9005
);

/* INSERT QUERY NO: 80 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
580, 80, 9005
);

/* INSERT QUERY NO: 81 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
581, 81, 9007
);

/* INSERT QUERY NO: 82 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
582, 82, 9007
);

/* INSERT QUERY NO: 83 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
583, 83, 9007
);

/* INSERT QUERY NO: 84 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
584, 84, 9009
);

/* INSERT QUERY NO: 85 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
585, 85, 9008
);

/* INSERT QUERY NO: 86 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
586, 86, 9014
);

/* INSERT QUERY NO: 87 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
587, 87, 9014
);

/* INSERT QUERY NO: 88 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
588, 88, 9008
);

/* INSERT QUERY NO: 89 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
589, 89, 9014
);

/* INSERT QUERY NO: 90 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
590, 90, 9009
);

/* INSERT QUERY NO: 91 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
591, 91, 9008
);

/* INSERT QUERY NO: 92 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
592, 92, 9004
);

/* INSERT QUERY NO: 93 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
593, 93, 9015
);

/* INSERT QUERY NO: 94 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
594, 94, 9004
);

/* INSERT QUERY NO: 95 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
595, 95, 9010
);

/* INSERT QUERY NO: 96 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
596, 96, 9010
);

/* INSERT QUERY NO: 97 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
597, 97, 9009
);

/* INSERT QUERY NO: 98 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
598, 98, 9015
);

/* INSERT QUERY NO: 99 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
599, 99, 9004
);

/* INSERT QUERY NO: 100 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
600, 100, 9004
);

/* INSERT QUERY NO: 101 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
601, 101, 9002
);

/* INSERT QUERY NO: 102 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
602, 102, 9015
);

/* INSERT QUERY NO: 103 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
603, 103, 9015
);

/* INSERT QUERY NO: 104 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
604, 104, 9015
);

/* INSERT QUERY NO: 105 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
605, 105, 9003
);

/* INSERT QUERY NO: 106 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
606, 106, 9010
);

/* INSERT QUERY NO: 107 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
607, 107, 9015
);

/* INSERT QUERY NO: 108 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
608, 108, 9015
);

/* INSERT QUERY NO: 109 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
609, 109, 9010
);

/* INSERT QUERY NO: 110 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
610, 110, 9015
);

/* INSERT QUERY NO: 111 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
611, 111, 9003
);

/* INSERT QUERY NO: 112 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
612, 112, 9010
);

/* INSERT QUERY NO: 113 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
613, 113, 9014
);

/* INSERT QUERY NO: 114 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
614, 114, 9010
);

/* INSERT QUERY NO: 115 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
615, 115, 9014
);

/* INSERT QUERY NO: 116 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
616, 116, 9014
);

/* INSERT QUERY NO: 117 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
617, 117, 9003
);

/* INSERT QUERY NO: 118 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
618, 118, 9014
);

/* INSERT QUERY NO: 119 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
619, 119, 9014
);

/* INSERT QUERY NO: 120 */
INSERT INTO BIKE_AT_STATION(BIKE_STATION_ID, BIKE_ID, STATION_ID)
VALUES
(
620, 120, 9003
);

----- DISCOUNT

INSERT INTO DISCOUNT(DISCOUNT_ID,CUSTOMER_ID,DESCRIPTION_DISCOUNT,PERCENTAGE,START_DATE,END_DATE)VALUES(400,1037,'Welcome 50',25,'12-Jan-2022','12-Feb-2022');
INSERT INTO DISCOUNT(DISCOUNT_ID,CUSTOMER_ID,DESCRIPTION_DISCOUNT,PERCENTAGE,START_DATE,END_DATE)VALUES(401,1032,'Welcome 50',25,'12-Aug-2022','12-Sep-2022');
INSERT INTO DISCOUNT(DISCOUNT_ID,CUSTOMER_ID,DESCRIPTION_DISCOUNT,PERCENTAGE,START_DATE,END_DATE)VALUES(402,1026,'Welcome 50',25,'22-Dec-2022','22-Jan-2023');
INSERT INTO DISCOUNT(DISCOUNT_ID,CUSTOMER_ID,DESCRIPTION_DISCOUNT,PERCENTAGE,START_DATE,END_DATE)VALUES(403,1028,'Welcome 50',25,'12-Dec-2022','12-Jan-2023');
INSERT INTO DISCOUNT(DISCOUNT_ID,CUSTOMER_ID,DESCRIPTION_DISCOUNT,PERCENTAGE,START_DATE,END_DATE)VALUES(404,1069,'Welcome 50',25,'22-Aug-2022','22-Sep-2022');
INSERT INTO DISCOUNT(DISCOUNT_ID,CUSTOMER_ID,DESCRIPTION_DISCOUNT,PERCENTAGE,START_DATE,END_DATE)VALUES(405,1036,'Welcome 50',25,'21-Jul-2022','21-Aug-2022');
INSERT INTO DISCOUNT(DISCOUNT_ID,CUSTOMER_ID,DESCRIPTION_DISCOUNT,PERCENTAGE,START_DATE,END_DATE)VALUES(406,1031,'Welcome 50',25,'18-Apr-2022','18-May-2022');
INSERT INTO DISCOUNT(DISCOUNT_ID,CUSTOMER_ID,DESCRIPTION_DISCOUNT,PERCENTAGE,START_DATE,END_DATE)VALUES(407,1075,'Welcome 50',25,'11-Apr-2022','11-May-2022');
INSERT INTO DISCOUNT(DISCOUNT_ID,CUSTOMER_ID,DESCRIPTION_DISCOUNT,PERCENTAGE,START_DATE,END_DATE)VALUES(408,1054,'Welcome 50',25,'02-Apr-2022','02-May-2022');
INSERT INTO DISCOUNT(DISCOUNT_ID,CUSTOMER_ID,DESCRIPTION_DISCOUNT,PERCENTAGE,START_DATE,END_DATE)VALUES(409,1041,'Welcome 50',25,'08-Apr-2022','08-May-2022');
INSERT INTO DISCOUNT(DISCOUNT_ID,CUSTOMER_ID,DESCRIPTION_DISCOUNT,PERCENTAGE,START_DATE,END_DATE)VALUES(410,1054,'Welcome 50',25,'05-Mar-2022','05-Apr-2022');

--- PAYMENT

/* INSERT QUERY NO: 1 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5001, 1099, 5, '30-Nov-21', '', 0
);

/* INSERT QUERY NO: 2 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5002, 1033, 5, '6-Dec-21', '', 0
);

/* INSERT QUERY NO: 3 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5003, 1045, 5, '23-May-20', '', 0
);

/* INSERT QUERY NO: 4 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5004, 1022, 5, '12-Dec-20', '', 0
);

/* INSERT QUERY NO: 5 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5005, 1046, 5, '3-Mar-21', '', 0
);

/* INSERT QUERY NO: 6 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5006, 1022, 5, '6-Feb-21', '', 0
);

/* INSERT QUERY NO: 7 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5007, 1093, 5, '7-Apr-21', '', 0
);

/* INSERT QUERY NO: 8 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5008, 1055, 5, '8-Mar-22', '', 0
);

/* INSERT QUERY NO: 9 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5009, 1072, 5, '17-Dec-20', '', 0
);

/* INSERT QUERY NO: 10 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5010, 1057, 5, '13-Jul-21', '', 0
);

/* INSERT QUERY NO: 11 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5011, 1017, 5, '18-Jan-20', '', 0
);

/* INSERT QUERY NO: 12 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5012, 1024, 5, '21-Feb-22', '', 0
);

/* INSERT QUERY NO: 13 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5013, 1086, 5, '9-Jun-20', '', 0
);

/* INSERT QUERY NO: 14 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5014, 1021, 5, '30-Apr-20', '', 0
);

/* INSERT QUERY NO: 15 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5015, 1037, 5, '28-Sep-21', '400', 0
);

/* INSERT QUERY NO: 16 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5016, 1032, 5, '2-Mar-21', '401', 0
);

/* INSERT QUERY NO: 17 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5017, 1026, 5, '31-Jan-20', '402', 0
);

/* INSERT QUERY NO: 18 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5018, 1028, 5, '2-Mar-21', '403', 0
);

/* INSERT QUERY NO: 19 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5019, 1069, 5, '14-May-21', '404', 0
);

/* INSERT QUERY NO: 20 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5020, 1036, 5, '11-Mar-22', '405', 0
);

/* INSERT QUERY NO: 21 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5021, 1031, 5, '11-Jan-21', '406', 0
);

/* INSERT QUERY NO: 22 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5022, 1075, 5, '26-Jan-22', '407', 0
);

/* INSERT QUERY NO: 23 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5023, 1054, 5, '21-Jul-20', '408', 0
);

/* INSERT QUERY NO: 24 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5024, 1041, 5, '16-Jun-21', '409', 0
);

/* INSERT QUERY NO: 25 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5025, 1054, 5, '24-Oct-21', '410', 0
);

/* INSERT QUERY NO: 26 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5026, 1087, 5, '2-Nov-21', '', 0
);

/* INSERT QUERY NO: 27 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5027, 1060, 5, '30-Sep-20', '', 0
);

/* INSERT QUERY NO: 28 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5028, 1089, 5, '26-Oct-21', '', 0
);

/* INSERT QUERY NO: 29 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5029, 1078, 5, '30-Mar-20', '', 0
);

/* INSERT QUERY NO: 30 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5030, 1042, 5, '9-Jun-20', '', 0
);

/* INSERT QUERY NO: 31 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5031, 1012, 5, '30-Mar-21', '', 0
);

/* INSERT QUERY NO: 32 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5032, 1033, 5, '3-Aug-21', '', 0
);

/* INSERT QUERY NO: 33 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5033, 1001, 5, '9-Mar-20', '', 0
);

/* INSERT QUERY NO: 34 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5034, 1100, 5, '20-Aug-21', '', 0
);

/* INSERT QUERY NO: 35 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5035, 1085, 5, '28-Dec-21', '', 0
);

/* INSERT QUERY NO: 36 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5036, 1079, 5, '12-Sep-21', '', 0
);

/* INSERT QUERY NO: 37 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5037, 1045, 5, '14-Apr-22', '', 0
);

/* INSERT QUERY NO: 38 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5038, 1088, 5, '30-Dec-21', '', 0
);

/* INSERT QUERY NO: 39 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5039, 1009, 5, '1-Nov-21', '', 0
);

/* INSERT QUERY NO: 40 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5040, 1033, 5, '13-Mar-22', '', 0
);

/* INSERT QUERY NO: 41 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5041, 1056, 5, '29-Jul-20', '', 0
);

/* INSERT QUERY NO: 42 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5042, 1012, 5, '27-Jul-21', '', 0
);

/* INSERT QUERY NO: 43 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5043, 1055, 5, '4-Oct-20', '', 0
);

/* INSERT QUERY NO: 44 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5044, 1034, 5, '4-Nov-20', '', 0
);

/* INSERT QUERY NO: 45 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5045, 1013, 5, '10-Sep-20', '', 0
);

/* INSERT QUERY NO: 46 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5046, 1004, 5, '24-Jun-20', '', 0
);

/* INSERT QUERY NO: 47 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5047, 1055, 5, '18-Jul-20', '', 0
);

/* INSERT QUERY NO: 48 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5048, 1047, 5, '6-Feb-20', '', 0
);

/* INSERT QUERY NO: 49 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5049, 1022, 5, '3-Jul-21', '', 0
);

/* INSERT QUERY NO: 50 */
INSERT INTO PAYMENT(PAYMENT_ID, CUSTOMER_ID, AMOUNT, PAYMENT_DATE, DISCOUNT_ID, EXTRA_FEE)
VALUES
(
5050, 1002, 5, '1-Dec-21', '', 0
);

--- RIDE TRANSACTION DETAILS 

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1001,5001,1099,9003,9003,'30-Nov-2021',TO_DATE('07-Feb-2021 12:12 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('26-Jun-2021 10:31 AM','DD-MON-YYYY HH:MI AM'),32,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1002,5002,1033,9004,9005,'06-Dec-2021',TO_DATE('16-Jun-2021 8:26 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('14-Jan-2020 10:50 AM','DD-MON-YYYY HH:MI AM'),1,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1003,5003,1045,9005,9005,'23-May-2020',TO_DATE('11-May-2020 6:3 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('09-Jul-2020 10:39 PM','DD-MON-YYYY HH:MI PM'),94,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1004,5004,1022,9006,9006,'12-Dec-2020',TO_DATE('01-May-2021 12:27 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('22-Sep-2020 7:43 PM','DD-MON-YYYY HH:MI PM'),68,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1005,5005,1046,9013,9013,'03-Mar-2021',TO_DATE('11-Nov-2020 1:4 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('19-Aug-2021 8:42 AM','DD-MON-YYYY HH:MI AM'),67,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1006,5006,1022,9012,9013,'06-Feb-2021',TO_DATE('29-Nov-2020 10:45 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('17-Nov-2020 11:37 AM','DD-MON-YYYY HH:MI AM'),107,10,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1007,5007,1093,9002,9002,'07-Apr-2021',TO_DATE('11-Sep-2021 5:24 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('03-Feb-2021 2:44 AM','DD-MON-YYYY HH:MI AM'),44,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1008,5008,1055,9006,9006,'08-Mar-2022',TO_DATE('23-Oct-2020 12:31 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('25-May-2021 4:20 AM','DD-MON-YYYY HH:MI AM'),15,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1009,5009,1072,9002,9002,'17-Dec-2020',TO_DATE('29-Oct-2020 12:56 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('18-Oct-2020 4:16 AM','DD-MON-YYYY HH:MI AM'),91,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1010,5010,1057,9012,9012,'13-Jul-2021',TO_DATE('20-Oct-2020 11:3 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('21-Jul-2020 1:57 PM','DD-MON-YYYY HH:MI PM'),101,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1011,5011,1017,9012,9012,'18-Jan-2020',TO_DATE('10-Jun-2021 1:33 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('15-Aug-2021 6:1 PM','DD-MON-YYYY HH:MI PM'),72,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1012,5012,1024,9013,9013,'21-Feb-2022',TO_DATE('17-Jun-2020 1:56 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('09-Nov-2020 1:54 PM','DD-MON-YYYY HH:MI PM'),59,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1013,5013,1086,9012,9012,'09-Jun-2020',TO_DATE('11-Feb-2020 4:27 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('17-Dec-2021 5:40 PM','DD-MON-YYYY HH:MI PM'),54,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1014,5014,1021,9013,9013,'30-Apr-2020',TO_DATE('04-Mar-2020 1:39 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('19-Sep-2020 6:26 AM','DD-MON-YYYY HH:MI AM'),52,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1015,5015,1037,9013,9014,'28-Sep-2021',TO_DATE('29-Feb-2020 3:22 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('23-Jan-2021 7:16 AM','DD-MON-YYYY HH:MI AM'),22,15,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1016,5016,1032,9007,9007,'02-Mar-2021',TO_DATE('20-May-2020 12:36 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('16-Mar-2021 12:42 AM','DD-MON-YYYY HH:MI AM'),100,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1017,5017,1026,9011,9011,'31-Jan-2020',TO_DATE('06-Jan-2021 4:1 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('17-May-2021 10:44 PM','DD-MON-YYYY HH:MI PM'),35,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1018,5018,1028,9011,9011,'02-Mar-2021',TO_DATE('20-Jul-2021 6:53 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('10-Aug-2020 7:1 AM','DD-MON-YYYY HH:MI AM'),37,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1019,5019,1069,9009,9009,'14-May-2021',TO_DATE('30-Sep-2021 12:57 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('06-Oct-2020 11:52 PM','DD-MON-YYYY HH:MI PM'),85,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1020,5020,1036,9009,9009,'11-Mar-2022',TO_DATE('12-Feb-2021 7:37 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('08-Nov-2020 3:24 PM','DD-MON-YYYY HH:MI PM'),70,10,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1021,5021,1031,9004,9004,'11-Jan-2021',TO_DATE('01-Jan-2020 9:38 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('13-Nov-2021 12:59 PM','DD-MON-YYYY HH:MI PM'),117,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1022,5022,1075,9002,9002,'26-Jan-2022',TO_DATE('25-Apr-2020 11:59 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('18-Dec-2021 2:31 PM','DD-MON-YYYY HH:MI PM'),118,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1023,5023,1054,9013,9013,'21-Jul-2020',TO_DATE('03-Oct-2021 4:37 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('21-Apr-2021 10:49 PM','DD-MON-YYYY HH:MI PM'),109,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1024,5024,1041,9005,9005,'16-Jun-2021',TO_DATE('24-Jun-2021 12:31 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('25-Feb-2022 11:4 PM','DD-MON-YYYY HH:MI PM'),69,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1025,5025,1054,9008,9008,'24-Oct-2021',TO_DATE('16-Oct-2020 7:39 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('27-Apr-2020 8:4 PM','DD-MON-YYYY HH:MI PM'),67,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1026,5026,1087,9012,9012,'02-Nov-2021',TO_DATE('08-Apr-2022 2:24 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('24-Oct-2020 10:31 PM','DD-MON-YYYY HH:MI PM'),88,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1027,5027,1060,9011,9011,'30-Sep-2020',TO_DATE('03-Nov-2021 9:39 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('17-Oct-2020 9:54 AM','DD-MON-YYYY HH:MI AM'),85,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1028,5028,1089,9002,9002,'26-Oct-2021',TO_DATE('17-Jan-2022 2:7 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('24-Aug-2021 12:54 PM','DD-MON-YYYY HH:MI PM'),29,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1029,5029,1078,9013,9013,'30-Mar-2020',TO_DATE('06-Sep-2021 2:39 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('26-Nov-2021 8:22 AM','DD-MON-YYYY HH:MI AM'),1,15,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1030,5030,1042,9007,9007,'09-Jun-2020',TO_DATE('12-Feb-2022 8:15 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('26-Jan-2022 5:40 AM','DD-MON-YYYY HH:MI AM'),9,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1031,5031,1012,9010,9009,'30-Mar-2021',TO_DATE('05-Jul-2020 2:17 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('23-Mar-2021 9:13 PM','DD-MON-YYYY HH:MI PM'),37,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1032,5032,1033,9001,9001,'03-Aug-2021',TO_DATE('10-Apr-2021 12:35 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('22-Feb-2020 8:30 AM','DD-MON-YYYY HH:MI AM'),2,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1033,5033,1001,9003,9003,'09-Mar-2020',TO_DATE('10-Feb-2022 3:14 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('05-Feb-2021 2:48 AM','DD-MON-YYYY HH:MI AM'),87,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1034,5034,1100,9005,9005,'20-Aug-2021',TO_DATE('04-Dec-2021 2:24 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('22-Oct-2021 8:13 AM','DD-MON-YYYY HH:MI AM'),36,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1035,5035,1085,9005,9005,'28-Dec-2021',TO_DATE('21-Feb-2020 1:9 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('31-Aug-2021 6:31 PM','DD-MON-YYYY HH:MI PM'),87,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1036,5036,1079,9001,9001,'12-Sep-2021',TO_DATE('22-Sep-2020 6:59 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('18-Sep-2021 10:33 PM','DD-MON-YYYY HH:MI PM'),80,10,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1037,5037,1045,9008,9008,'14-Apr-2022',TO_DATE('29-Aug-2020 4:2 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('08-Dec-2020 12:24 AM','DD-MON-YYYY HH:MI AM'),62,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1038,5038,1088,9012,9012,'30-Dec-2021',TO_DATE('15-Feb-2021 12:46 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('30-Sep-2021 3:29 PM','DD-MON-YYYY HH:MI PM'),98,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1039,5039,1009,9002,9003,'01-Nov-2021',TO_DATE('10-Nov-2021 4:10 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('09-Apr-2022 3:58 PM','DD-MON-YYYY HH:MI PM'),32,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1040,5040,1033,9003,9003,'13-Mar-2022',TO_DATE('15-Jan-2020 7:4 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('03-Jul-2020 9:37 AM','DD-MON-YYYY HH:MI AM'),12,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1041,5041,1056,9003,9003,'29-Jul-2020',TO_DATE('26-Mar-2020 8:28 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('10-Apr-2022 1:55 AM','DD-MON-YYYY HH:MI AM'),100,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1042,5042,1012,9003,9003,'27-Jul-2021',TO_DATE('08-Sep-2020 9:40 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('09-Sep-2020 11:53 PM','DD-MON-YYYY HH:MI PM'),37,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1043,5043,1055,9001,9001,'04-Oct-2020',TO_DATE('12-Nov-2020 8:17 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('20-Feb-2021 3:31 AM','DD-MON-YYYY HH:MI AM'),115,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1044,5044,1034,9014,9015,'04-Nov-2020',TO_DATE('07-Jul-2021 2:59 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('12-Mar-2022 9:13 AM','DD-MON-YYYY HH:MI AM'),100,10,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1045,5045,1013,9002,9002,'10-Sep-2020',TO_DATE('15-Jan-2022 10:20 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('11-Jan-2021 1:25 AM','DD-MON-YYYY HH:MI AM'),33,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1046,5046,1004,9011,9011,'24-Jun-2020',TO_DATE('14-Jan-2021 10:34 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('03-Jul-2021 4:59 AM','DD-MON-YYYY HH:MI AM'),19,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1047,5047,1055,9012,9012,'18-Jul-2020',TO_DATE('25-Feb-2020 8:7 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('29-Jan-2021 2:5 PM','DD-MON-YYYY HH:MI PM'),66,15,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1048,5048,1047,9005,9005,'06-Feb-2020',TO_DATE('16-Sep-2020 2:30 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('04-Aug-2020 4:25 PM','DD-MON-YYYY HH:MI PM'),84,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1049,5049,1022,9002,9002,'03-Jul-2021',TO_DATE('30-Aug-2021 8:22 AM','DD-MON-YYYY HH:MI AM'),TO_DATE('17-Jan-2022 6:43 PM','DD-MON-YYYY HH:MI PM'),7,0,'COMPLETE');

INSERT INTO RIDE_TRANSACTION(TRANS_ID, PAYMENT_ID, CUSTOMER_ID, BIKE_PICKUP_STATION, BIKE_DROP_STATION, TRANSACTION_DATE, START_TIME, END_TIME, BIKE_ID, DISTANCE, STATUS)
VALUES(1050,5050,1002,9001,9001,'01-Dec-2021',TO_DATE('27-Sep-2020 12:26 PM','DD-MON-YYYY HH:MI PM'),TO_DATE('01-Nov-2020 1:49 AM','DD-MON-YYYY HH:MI AM'),87,0,'COMPLETE');


-- Commit 
COMMIT;

-- SHOW TABLES
SELECT * FROM CUSTOMER;
SELECT * FROM CUSTOMER_ADDRESS;
SELECT * FROM BIKE;
SELECT * FROM STATION;
SELECT * FROM BIKE_AT_STATION;
SELECT * FROM DISCOUNT;
SELECT * FROM PAYMENT;